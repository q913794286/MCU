C51 COMPILER V9.01   MAIN                                                                  01/30/2019 15:31:53 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE app\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\stclib;..\stc_lib;.\a
                    -pp;.\app\service\app;.\app\service\AES128;.\app\service\CRC16) DEBUG OBJECTEXTEND PRINT(.\list\main.lst) TABS(2) OBJECT(
                    -.\list\main.obj)

line level    source

   1          /*c51 Uip 移植实例
   2          *环境 KEIL
   3          *www.anchey.com ancheel
   4          */
   5          #include  "config.h"
   6          #include  "USART1.h"
   7          #include  "delay.h"
   8          #include  "GPIO.h"
   9          
  10          
  11          #include   "sys_clock.h"
  12          #include "function.h"
  13          
  14          
  15          sbit RELAY_LED_RUN1= P0^2;
  16          sbit RELAY_LED_RUN2 = P0^3;
  17          
  18          
  19          void  GPIO_config(void)
  20          {
  21   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  22   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  23   1        GPIO_InitStructure.Mode = GPIO_PullUp;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  24   1        GPIO_Inilize(GPIO_P1,&GPIO_InitStructure);  //初始化  
  25   1      
  26   1        
  27   1        
  28   1        GPIO_InitStructure.Pin  = GPIO_Pin_1| GPIO_Pin_2|GPIO_Pin_3;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
             -, 或操作
  29   1        GPIO_InitStructure.Mode = GPIO_PullUp;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  30   1        GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //初始化  
  31   1        
  32   1        GPIO_InitStructure.Pin  = GPIO_Pin_7;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  33   1        GPIO_InitStructure.Mode = GPIO_HighZ;   //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  34   1        GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);  //初始化  
  35   1        
  36   1        RESET_OFF;   //对ch9121
  37   1        
  38   1              
  39   1      }
  40          
  41          /*************  串口1初始化函数 *****************/
  42          void  UART_config(void)
  43          {
  44   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
  45   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
  46   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //使用波特率,   BRT_Timer1, BRT_Timer2 (注意: 串口2固定
             -使用BRT_Timer2)
  47   1        COMx_InitStructure.UART_BaudRate  = 9600ul;     //波特率, 一般 110 ~ 115200
C51 COMPILER V9.01   MAIN                                                                  01/30/2019 15:31:53 PAGE 2   

  48   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  49   1        COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  50   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  51   1        COMx_InitStructure.UART_Polity    = PolityLow;      //中断优先级, PolityLow,PolityHigh
  52   1        COMx_InitStructure.UART_P_SW      = UART1_SW_P30_P31; //切换端口,   UART1_SW_P30_P31,UART1_SW_P36_P37,UAR
             -T1_SW_P16_P17(必须使用内部时钟)
  53   1        COMx_InitStructure.UART_RXD_TXD_Short = DISABLE;    //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
  54   1        USART_Configuration(USART1, &COMx_InitStructure);   //初始化串口1 USART1,USART2
  55   1      
  56   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
  57   1        COMx_InitStructure.UART_BaudRate  = 9600ul;     //波特率,     110 ~ 115200
  58   1        COMx_InitStructure.UART_RxEnable  = DISABLE;        //接收允许,   ENABLE或DISABLE
  59   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  60   1        COMx_InitStructure.UART_Polity    = PolityLow;      //中断优先级, PolityLow,PolityHigh
  61   1        COMx_InitStructure.UART_P_SW      = UART2_SW_P10_P11; //切换端口,   UART2_SW_P10_P11,UART2_SW_P46_P47
  62   1        USART_Configuration(USART2, &COMx_InitStructure);   //初始化串口2 USART1,USART2
  63   1      //  Printf1("123",3);
  64   1      //  PrintString1("STC15F2K60S2 UART1 Test Prgramme!\r\n");  //SUART1发送一个字符串
  65   1      //  PrintString2("STC15F2K60S2 UART2 Test Prgramme!\r\n");  //SUART2发送一个字符串
  66   1      }
  67          
  68          
  69          
  70          
  71          
  72          
  73          
  74          
  75          
  76          void main(void)
  77          {
  78   1        GPIO_config();
  79   1        UART_config();
  80   1        sys_clock_init();
  81   1        EA = 1;
  82   1        //定时器稳定前尽可能不要操作串口
  83   1        RELAY_LED_RUN1 = 0;
  84   1        RELAY_LED_RUN2 = 0;
  85   1      
  86   1      //  printf("%s","123456789\r\n");
  87   1      //  PrintString1("STC15F2K60S2 UART1 Test Prgramme!\r\n");  //SUART1发送一个字符串
  88   1      //  PrintString2("STC15F2K60S2 UART2 Test Prgramme!\r\n");  //SUART2发送一个字符串
  89   1      //  while(1);
  90   1        
  91   1      /// function();
  92   1          debug_loop();
*** WARNING C206 IN LINE 92 OF APP\MAIN.C: 'debug_loop': missing function-prototype
  93   1      
  94   1      }
  95          
  96          
  97          char putchar(char c)
  98          {
  99   1          if(c == '\n') 
 100   1        {
 101   2              SBUF = '\r';       
 102   2              while(!TI);
 103   2          }
 104   1          SBUF = c;
 105   1          while(!TI);
 106   1      
C51 COMPILER V9.01   MAIN                                                                  01/30/2019 15:31:53 PAGE 3   

 107   1          return c;
 108   1      }
 109          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
