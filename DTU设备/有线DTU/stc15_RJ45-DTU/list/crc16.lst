C51 COMPILER V9.01   CRC16                                                                 01/30/2019 15:31:54 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CRC16
OBJECT MODULE PLACED IN .\list\crc16.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE app\service\CRC16\crc16.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\stclib
                    -;..\stc_lib;.\app;.\app\service\app;.\app\service\AES128;.\app\service\CRC16) DEBUG OBJECTEXTEND PRINT(.\list\crc16.lst)
                    - TABS(2) OBJECT(.\list\crc16.obj)

line level    source

   1          #include <stdint.h>
   2          #include <string.h>
   3          #include <stdint.h>
   4          
   5          #include "crc16.h"
   6          
   7          /****************************************************************
   8          *
   9          *   CRC校验
  10          *
  11          ****************************************************************/
  12          //字地址 0 - 255 (只取低8位)
  13          //位地址 0 - 255 (只取低8位)
  14          
  15          /* CRC 高位字节值表 */
  16          const uint8_t code auchCRCHi[] = {
  17          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  18          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  19          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  20          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  21          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  22          0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  23          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  24          0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  25          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  26          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
  27          0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  28          0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  29          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  30          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
  31          0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  32          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  33          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  34          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  35          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  36          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  37          0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  38          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
  39          0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  40          0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  41          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  42          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40
  43          } ;
  44          /* CRC低位字节值表*/
  45          const uint8_t code  auchCRCLo[] = {
  46          0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06,
  47          0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD,
  48          0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
  49          0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A,
  50          0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4,
  51          0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
  52          0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3,
  53          0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4,
C51 COMPILER V9.01   CRC16                                                                 01/30/2019 15:31:54 PAGE 2   

  54          0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
  55          0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29,
  56          0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED,
  57          0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
  58          0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60,
  59          0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67,
  60          0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
  61          0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68,
  62          0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E,
  63          0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
  64          0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71,
  65          0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92,
  66          0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
  67          0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B,
  68          0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B,
  69          0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
  70          0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42,
  71          0x43, 0x83, 0x41, 0x81, 0x80, 0x40
  72          } ;
  73          /********************************************************
  74          *名称：     crc16
  75          *功能：     16为CRC校验
  76          *输入：     *puchMsg    ：待校验数组
  77                          usDataLen   : 待校验数组长度
  78          *返回：     16位校验码
  79          ********************************************************/
  80          uint16_t crc16(uint8_t *puchMsg, uint16_t usDataLen)
  81          {
  82   1          uint8_t uchCRCHi = 0xFF ; /* 高CRC字节初始化 */
  83   1          uint8_t uchCRCLo = 0xFF ; /* 低CRC 字节初始化 */
  84   1          uint32_t uIndex ; /* CRC循环中的索引 */
  85   1          while (usDataLen--) /* 传输消息缓冲区 */
  86   1          {
  87   2              uIndex = uchCRCHi ^ *puchMsg++ ; /* 计算CRC */
  88   2      
  89   2              uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ;
  90   2              uchCRCLo = auchCRCLo[uIndex] ;
  91   2          }
  92   1          return (uchCRCHi << 8 | uchCRCLo) ;
  93   1      }
  94          
  95          /********************************************************
  96          *名称：     crc16
  97          *功能：     16为CRC校验
  98          *输入：     *puchMsg    ：待校验数组
  99                          usDataLen   : 待校验数组长度
 100          *返回：     16位校验码
 101          ********************************************************/
 102          uint16_t crc16_2(uint8_t *puchMsg1, uint16_t usDataLen1,  uint8_t *puchMsg2,  uint16_t usDataLen2)
 103          {
 104   1          uint8_t uchCRCHi = 0xFF ; /* 高CRC字节初始化 */
 105   1          uint8_t uchCRCLo = 0xFF ; /* 低CRC 字节初始化 */
 106   1          uint32_t uIndex ; /* CRC循环中的索引 */
 107   1      
 108   1        while (usDataLen1--) /* 传输消息缓冲区 */
 109   1          {   
 110   2              uIndex = uchCRCHi ^ *puchMsg1++ ; /* 计算CRC */
 111   2              uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ;
 112   2              uchCRCLo = auchCRCLo[uIndex] ;
 113   2          }
 114   1          while (usDataLen2--) /* 传输消息缓冲区 */
 115   1          {   
C51 COMPILER V9.01   CRC16                                                                 01/30/2019 15:31:54 PAGE 3   

 116   2              uIndex = uchCRCHi ^ *puchMsg2++ ; /* 计算CRC */
 117   2              uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ;
 118   2              uchCRCLo = auchCRCLo[uIndex] ;
 119   2          }
 120   1          return (uchCRCHi << 8 | uchCRCLo) ;
 121   1      }
 122          //uint16 crc16(uint8 *puchMsg, uint16 usDataLen)


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =    512    ----
   XDATA SIZE       =   ----      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
