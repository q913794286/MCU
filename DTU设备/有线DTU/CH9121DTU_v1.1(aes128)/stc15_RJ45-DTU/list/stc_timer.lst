C51 COMPILER V9.01   STC_TIMER                                                             12/14/2018 11:06:28 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE STC_TIMER
OBJECT MODULE PLACED IN .\list\stc_timer.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE stclib\stc_timer.c LARGE BROWSE INCDIR(.\stclib;..\stc_
                    -lib;.\app;.\app\service\app;.\app\service\AES128;.\app\service\CRC16) DEBUG OBJECTEXTEND PRINT(.\list\stc_timer.lst) OBJ
                    -ECT(.\list\stc_timer.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   5          
   6          
   7          ******************************************/
   8          
   9          
  10          
  11          #include "stc_timer.h"
  12          #include <stdint.h>
  13          
  14          #include <sys_clock.h>
  15          
  16          
  17          /********************* Timer0中断函数************************/
  18          void timer0_int (void) interrupt TIMER0_VECTOR
  19          {
  20   1                      
  21   1              sys_ticks++;  //系统时钟
  22   1                      
  23   1      }
  24          
  25          /********************* Timer1中断函数************************/
  26          void timer1_int (void) interrupt TIMER1_VECTOR
  27          {
  28   1      
  29   1      }
  30          
  31          /********************* Timer2中断函数************************/
  32          void timer2_int (void) interrupt TIMER2_VECTOR
  33          {
  34   1      
  35   1      
  36   1      }
  37          
  38          
  39          //========================================================================
  40          // 函数: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  41          // 描述: 定时器初始化程序.
  42          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  43          // 返回: 成功返回0, 空操作返回1,错误返回2.
  44          // 版本: V1.0, 2012-10-22
  45          //========================================================================
  46          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  47          {
  48   1              if(TIM > Timer2)        return 1;       //空操作
  49   1      
  50   1              if(TIM == Timer0)
  51   1              {
  52   2                      TR0 = 0;                //停止计数
  53   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
C51 COMPILER V9.01   STC_TIMER                                                             12/14/2018 11:06:28 PAGE 2   

  54   2                      else                                                                    ET0 = 0;        //禁止中断
  55   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  56   2                      else                                                                    PT0 = 0;        //低优先级中断
  57   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
  58   2                      TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  59   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
  60   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  61   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  62   2                      else                                                                            TMOD &= ~0x04;  //定时
  63   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  64   2                      else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  65   2                      
  66   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  67   2                      TL0 = (u8)TIMx->TIM_Value;
  68   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  69   2                      return  0;              //成功
  70   2              }
  71   1      
  72   1              if(TIM == Timer1)
  73   1              {
  74   2                      TR1 = 0;                //停止计数
  75   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  76   2                      else                                                                    ET1 = 0;        //禁止中断
  77   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  78   2                      else                                                                    PT1 = 0;        //低优先级中断
  79   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  80   2                      TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  81   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  82   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  83   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  84   2                      else                                                                            TMOD &= ~0x40;  //定时
  85   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  86   2                      else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  87   2                      
  88   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
  89   2                      TL1 = (u8)TIMx->TIM_Value;
  90   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  91   2                      return  0;              //成功
  92   2              }
  93   1      
  94   1              if(TIM == Timer2)               //Timer2,固定为16位自动重装, 中断无优先级
  95   1              {
  96   2                      AUXR &= ~(1<<4);        //停止计数
  97   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
  98   2                      else                                                                            IE2  &= ~(1<<2);        //禁止中断
  99   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
 100   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
 101   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
 102   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
 103   2                      else                                                                            AUXR &= ~(1<<3);        //定时
 104   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
 105   2                      else                                                    INT_CLKO &= ~0x04;      //不输出时钟
 106   2      
 107   2                      TH2 = (u8)(TIMx->TIM_Value >> 8);
 108   2                      TL2 = (u8)TIMx->TIM_Value;
 109   2                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 110   2                      return  0;              //成功
 111   2              }
 112   1              return 2;       //错误
 113   1      }

C51 COMPILER V9.01   STC_TIMER                                                             12/14/2018 11:06:28 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    426    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
