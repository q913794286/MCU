C51 COMPILER V9.01   EXIT                                                                  11/27/2018 17:40:20 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE EXIT
OBJECT MODULE PLACED IN .\list\exit.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE stclib\exit.c LARGE BROWSE INCDIR(.\stclib;..\stc_lib;.
                    -\app;.\app\service\webserver;.\drivers\enc28j60;.\uip\c51;.\uip;.\app\service\idle;.\app\service\client;.\app\service\re
                    -ader;.\app\service\relay;.\app\service\wr_ip) DEBUG OBJECTEXTEND PRINT(.\list\exit.lst) OBJECT(.\list\exit.obj)

line level    source

   1          /*************  功能说明        **************
   2          
   3          本文件为STC15xxx系列的外中断初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   4          
   5          ******************************************/
   6          #include "exit.h"
   7          
   8          /********************* INT0中断函数 *************************/
   9          void Ext_INT0 (void) interrupt INT0_VECTOR              //进中断时已经清除标志
  10          {
  11   1      
  12   1      }
  13          
  14          /********************* INT1中断函数 *************************/
  15          void Ext_INT1 (void) interrupt INT1_VECTOR              //进中断时已经清除标志
  16          {
  17   1      
  18   1      
  19   1      }
  20          
  21          /********************* INT2中断函数 *************************/
  22          void Ext_INT2 (void) interrupt INT2_VECTOR      //
  23          {
  24   1      
  25   1      }
  26          
  27          /********************* INT3中断函数 *************************/
  28          void Ext_INT3 (void) interrupt INT3_VECTOR
  29          {
  30   1      
  31   1      }
  32          
  33          /********************* INT4中断函数 *************************/
  34          void Ext_INT4 (void) interrupt INT4_VECTOR
  35          {
  36   1              
  37   1      }
  38          
  39          //========================================================================
  40          // 函数: u8     Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  41          // 描述: 外部中断初始化程序.
  42          // 参数: INTx: 结构参数,请参考Exti.h里的定义.
  43          // 返回: 成功返回0, 空操作返回1,错误返回2.
  44          // 版本: V1.0, 2012-10-22
  45          //========================================================================
  46          u8      Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  47          {
  48   1              if(EXT >  EXT_INT4)     return 1;       //空操作
  49   1              
  50   1              if(EXT == EXT_INT0)     //外中断0
  51   1              {
  52   2                      if(INTx->EXTI_Interrupt == ENABLE)              EX0 = 1;        //允许中断
  53   2                      else                                                                    EX0 = 0;        //禁止中断
C51 COMPILER V9.01   EXIT                                                                  11/27/2018 17:40:20 PAGE 2   

  54   2                      if(INTx->EXTI_Polity == PolityHigh)             PX0 = 1;        //高优先级中断
  55   2                      else                                                                    PX0 = 0;        //低优先级中断
  56   2                      if(INTx->EXTI_Mode == EXT_MODE_Fall)    IT0 = 1;        //下降沿中断
  57   2                      else                                                                    IT0 = 0;        //上升,下降沿中断
  58   2                      return  0;              //成功
  59   2              }
  60   1      
  61   1              if(EXT == EXT_INT1)     //外中断1
  62   1              {
  63   2                      if(INTx->EXTI_Interrupt == ENABLE)              EX1 = 1;        //允许中断
  64   2                      else                                                                    EX1 = 0;        //禁止中断
  65   2                      if(INTx->EXTI_Polity == PolityHigh)             PX1 = 1;        //高优先级中断
  66   2                      else                                                                    PX1 = 0;        //低优先级中断
  67   2                      if(INTx->EXTI_Mode == EXT_MODE_Fall)    IT1 = 1;        //下降沿中断
  68   2                      else                                                                    IT1 = 0;        //上升,下降沿中断
  69   2                      return  0;              //成功
  70   2              }
  71   1      
  72   1              if(EXT == EXT_INT2)             //外中断2, 固定为下降沿低优先级中断
  73   1              {
  74   2                      if(INTx->EXTI_Interrupt == ENABLE)      INT_CLKO |=  (1 << 4);  //允许中断      
  75   2                      else                                                            INT_CLKO &= ~(1 << 4);  //禁止中断
  76   2                      return  0;              //成功
  77   2              }
  78   1      
  79   1              if(EXT == EXT_INT3)             //外中断3, 固定为下降沿低优先级中断
  80   1              {
  81   2                      if(INTx->EXTI_Interrupt == ENABLE)      INT_CLKO |=  (1 << 5);  //允许中断      
  82   2                      else                                                            INT_CLKO &= ~(1 << 5);  //禁止中断        
  83   2                      return  0;              //成功
  84   2              }
  85   1      
  86   1              if(EXT == EXT_INT4)             //外中断4, 固定为下降沿低优先级中断
  87   1              {
  88   2                      if(INTx->EXTI_Interrupt == ENABLE)      INT_CLKO |=  (1 << 6);  //允许中断      
  89   2                      else                                                            INT_CLKO &= ~(1 << 6);  //禁止中断
  90   2                      return  0;              //成功
  91   2              }
  92   1              return 2;       //失败
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
