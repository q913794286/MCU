C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE AES
OBJECT MODULE PLACED IN .\list\aes.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE app\service\AES128\aes.c LARGE BROWSE INCDIR(.\stclib;.
                    -.\stc_lib;.\app;.\app\service\app;.\app\service\AES128;.\app\service\CRC16;.\app\service\GPRS) DEBUG OBJECTEXTEND CODE L
                    -ISTINCLUDE SYMBOLS PRINT(.\list\aes.lst) PREPRINT(.\list\aes.i) OBJECT(.\list\aes.obj)

line level    source

   1          /*
   2          
   3          This is an implementation of the AES128 algorithm, specifically ECB and CBC mode.
   4          
   5          The implementation is verified against the test vectors in:
   6            National Institute of Standards and Technology Special Publication 800-38A 2001 ED
   7          
   8          ECB-AES128
   9          ----------
  10          
  11            plain-text:
  12              6bc1bee22e409f96e93d7e117393172a
  13              ae2d8a571e03ac9c9eb76fac45af8e51
  14              30c81c46a35ce411e5fbc1191a0a52ef
  15              f69f2445df4f9b17ad2b417be66c3710
  16          
  17            key:
  18              2b7e151628aed2a6abf7158809cf4f3c
  19          
  20            resulting cipher
  21              3ad77bb40d7a3660a89ecaf32466ef97 
  22              f5d3d58503b9699de785895a96fdbaaf 
  23              43b1cd7f598ece23881b00e3ed030688 
  24              7b0c785e27e8ad3f8223207104725dd4 
  25          
  26          
  27          NOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)
  28                  You should pad the end of the string with zeros if this is not the case.
  29          
  30          */
  31          
  32          
  33          /*****************************************************************************/
  34          /* Includes:                                                                 */
  35          /*****************************************************************************/
  36          #include <stdint.h>
   1      =1  #ifndef __STDINT_H__
   2      =1  #define __STDINT_H__
   3      =1  
   4      =1  typedef unsigned char uint8_t;  //1位长度
   5      =1  typedef signed char int8_t;               //
   6      =1  typedef unsigned short uint16_t;  //2位长度
   7      =1  typedef signed short int16_t;
   8      =1  typedef unsigned long uint32_t;   //4位长度
   9      =1  typedef signed long int32_t;
  10      =1  
  11      =1  #endif
  37          #include <string.h> // CBC mode, for memset
   1      =1  /*--------------------------------------------------------------------------
   2      =1  STRING.H
   3      =1  
   4      =1  String functions.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 2   

   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __STRING_H__
  10      =1  #define __STRING_H__
  11      =1  
  12      =1  #ifndef _SIZE_T
  13      =1   #define _SIZE_T
  14      =1   typedef unsigned int size_t;
  15      =1  #endif
  16      =1  
  17      =1  #ifndef NULL
  18      =1   #define NULL ((void *) 0L)
  19      =1  #endif
  20      =1  
  21      =1  #pragma SAVE
  22      =1  #pragma REGPARMS
  23      =1  extern char *strcat (char *s1, char *s2);
  24      =1  extern char *strncat (char *s1, char *s2, int n);
  25      =1  
  26      =1  extern char strcmp (char *s1, char *s2);
  27      =1  extern char strncmp (char *s1, char *s2, int n);
  28      =1  
  29      =1  extern char *strcpy (char *s1, char *s2);
  30      =1  extern char *strncpy (char *s1, char *s2, int n);
  31      =1  
  32      =1  extern int strlen (char *);
  33      =1  
  34      =1  extern char *strchr (const char *s, char c);
  35      =1  extern int strpos (const char *s, char c);
  36      =1  extern char *strrchr (const char *s, char c);
  37      =1  extern int strrpos (const char *s, char c);
  38      =1  
  39      =1  extern int strspn (char *s, char *set);
  40      =1  extern int strcspn (char *s, char *set);
  41      =1  extern char *strpbrk (char *s, char *set);
  42      =1  extern char *strrpbrk (char *s, char *set);
  43      =1  extern char *strstr  (char *s, char *sub);
  44      =1  extern char *strtok  (char *str, const char *set);
  45      =1  
  46      =1  extern char memcmp (void *s1, void *s2, int n);
  47      =1  extern void *memcpy (void *s1, void *s2, int n);
  48      =1  extern void *memchr (void *s, char val, int n);
  49      =1  extern void *memccpy (void *s1, void *s2, char val, int n);
  50      =1  extern void *memmove (void *s1, void *s2, int n);
  51      =1  extern void *memset  (void *s, char val, int n);
  52      =1  #pragma RESTORE
  53      =1  
  54      =1  #endif
  38          #include "aes.h"
   1      =1  #ifndef _AES_H_
   2      =1  #define _AES_H_
   3      =1  
   4      =1  #include <stdint.h>
   1      =2  #ifndef __STDINT_H__
           =2 #define __STDINT_H__
           =2 
           =2 typedef unsigned char uint8_t;  //1位长度
           =2 typedef signed char int8_t;               //
           =2 typedef unsigned short uint16_t;  //2位长度
           =2 typedef signed short int16_t;
           =2 typedef unsigned long uint32_t;   //4位长度
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 3   

           =2 typedef signed long int32_t;
           =2 
           =2 #endif
   5      =1  
   6      =1  
   7      =1  // #define the macros below to 1/0 to enable/disable the mode of operation.
   8      =1  //
   9      =1  // CBC enables AES128 encryption in CBC-mode of operation and handles 0-padding.
  10      =1  // ECB enables the basic ECB 16-byte block algorithm. Both can be enabled simultaneously.
  11      =1  
  12      =1  // The #ifndef-guard allows it to be configured before #include'ing or at compile time.
  13      =1  #ifndef CBC
  14      =1    #define CBC 1
  15      =1  #endif
  16      =1  
  17      =1  #ifndef ECB
  18      =1    #define ECB 1
  19      =1  #endif
  20      =1  
  21      =1  
  22      =1  
  23      =1  #if defined(ECB) && ECB
  24      =1  
  25      =1  void AES128_ECB_encrypt(const uint8_t* input, const uint8_t* key, uint8_t *output);
  26      =1  void AES128_ECB_decrypt(const uint8_t* input, const uint8_t* key, uint8_t *output);
  27      =1  
  28      =1  #endif // #if defined(ECB) && ECB
  29      =1  
  30      =1  
  31      =1  #if defined(CBC) && CBC
  32      =1  
  33      =1  void AES128_CBC_encrypt_buffer(uint8_t* output, uint8_t* input, uint32_t length, const uint8_t* key, const
             - uint8_t* iv);
  34      =1  void AES128_CBC_decrypt_buffer(uint8_t* output, uint8_t* input, uint32_t length, const uint8_t* key, const
             - uint8_t* iv);
  35      =1  
  36      =1  #endif // #if defined(CBC) && CBC
  37      =1  
  38      =1  
  39      =1  
  40      =1  #endif //_AES_H_
  39          
  40          
  41          /*****************************************************************************/
  42          /* Defines:                                                                  */
  43          /*****************************************************************************/
  44          // Enable both ECB and CBC mode. Note this can be done before including aes.h or at compile-time.
  45          // E.g. with GCC by using the -D flag: gcc -c aes.c -DCBC=0 -DECB=1
  46          //#define CBC 1
  47          //#define ECB 0
  48          // The number of columns comprising a state in AES. This is a constant in AES. Value=4
  49          #define Nb 4
  50          // The number of 32 bit words in a key.
  51          #define Nk 4
  52          // Key length in bytes [128 bit]
  53          #define KEYLEN 16
  54          // The number of rounds in AES Cipher.
  55          #define Nr 10
  56          
  57          // jcallan@github points out that declaring Multiply as a function 
  58          // reduces code size considerably with the Keil ARM compiler.
  59          // See this link for more information: https://github.com/kokke/tiny-AES128-C/pull/3
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 4   

  60          #ifndef MULTIPLY_AS_A_FUNCTION
  61            #define MULTIPLY_AS_A_FUNCTION 0
  62          #endif
  63          
  64          
  65          /*****************************************************************************/
  66          /* Private variables:      消耗内存208B                                                  */
  67          /*****************************************************************************/
  68          // state - array holding the intermediate results during decryption.
  69          typedef uint8_t state_t[4][4];
  70          static state_t* state;
  71          
  72          // The array that stores the round keys.
  73          static uint8_t RoundKey[176];
  74          
  75          // The Key input to the AES Program
  76          static const uint8_t* Key;
  77          
  78          #if defined(CBC) && CBC
  79            // Initial Vector used only for CBC mode
  80            static uint8_t* Iv;
  81          #endif
  82          
  83          // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
  84          // The numbers below can be computed dynamically trading ROM for RAM - 
  85          // This can be useful in (embedded) bootloader applications, where ROM is often limited.
  86          const uint8_t code sbox[256] =   {
  87            //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  88            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  89            0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  90            0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  91            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  92            0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  93            0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
  94            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  95            0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  96            0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  97            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  98            0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  99            0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
 100            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
 101            0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
 102            0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
 103            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };
 104          
 105          const uint8_t code rsbox[256] =
 106          { 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
 107            0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
 108            0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
 109            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
 110            0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
 111            0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
 112            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
 113            0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
 114            0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
 115            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
 116            0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
 117            0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
 118            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
 119            0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
 120            0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
 121            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 5   

 122          
 123          
 124          // The round constant word array, Rcon[i], contains the values given by 
 125          // x to th e power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)
 126          // Note that i starts at 1, not 0).
 127          const uint8_t code Rcon[255] = {
 128            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 
 129            0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 
 130            0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 
 131            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 
 132            0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 
 133            0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 
 134            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 
 135            0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 
 136            0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 
 137            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 
 138            0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 
 139            0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 
 140            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 
 141            0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 
 142            0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 
 143            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb  };
 144          
 145          
 146          /*****************************************************************************/
 147          /* Private functions:                                                        */
 148          /*****************************************************************************/
 149          uint8_t getSBoxValue(uint8_t num)
 150          {
 151   1        return sbox[num];
 152   1      }
 153          
 154          static uint8_t getSBoxInvert(uint8_t num)
 155          {
 156   1        return rsbox[num];
 157   1      }
 158          
 159          // This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the states
             -. 
 160          static void KeyExpansion(void)
 161          {
 162   1        uint32_t i, j, k;
 163   1        uint8_t tempa[4]; // Used for the column/row operations
 164   1        
 165   1        // The first round key is the key itself.
 166   1        for(i = 0; i < Nk; ++i)
 167   1        {
 168   2          RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];
 169   2          RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
 170   2          RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
 171   2          RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
 172   2        }
 173   1      
 174   1        // All other round keys are found from the previous round keys.
 175   1        for(; (i < (Nb * (Nr + 1))); ++i)
 176   1        {
 177   2          for(j = 0; j < 4; ++j)
 178   2          {
 179   3            tempa[j]=RoundKey[(i-1) * 4 + j];
 180   3          }
 181   2          if (i % Nk == 0)
 182   2          {
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 6   

 183   3            // This function rotates the 4 bytes in a word to the left once.
 184   3            // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]
 185   3      
 186   3            // Function RotWord()
 187   3            {
 188   4              k = tempa[0];
 189   4              tempa[0] = tempa[1];
 190   4              tempa[1] = tempa[2];
 191   4              tempa[2] = tempa[3];
 192   4              tempa[3] = k;
 193   4            }
 194   3      
 195   3            // SubWord() is a function that takes a four-byte input word and 
 196   3            // applies the S-box to each of the four bytes to produce an output word.
 197   3      
 198   3            // Function Subword()
 199   3            {
 200   4              tempa[0] = getSBoxValue(tempa[0]);
 201   4              tempa[1] = getSBoxValue(tempa[1]);
 202   4              tempa[2] = getSBoxValue(tempa[2]);
 203   4              tempa[3] = getSBoxValue(tempa[3]);
 204   4            }
 205   3      
 206   3            tempa[0] =  tempa[0] ^ Rcon[i/Nk];
 207   3          }
 208   2          else if (Nk > 6 && i % Nk == 4)
 209   2          {
 210   3            // Function Subword()
 211   3            {
 212   4              tempa[0] = getSBoxValue(tempa[0]);
 213   4              tempa[1] = getSBoxValue(tempa[1]);
 214   4              tempa[2] = getSBoxValue(tempa[2]);
 215   4              tempa[3] = getSBoxValue(tempa[3]);
 216   4            }
 217   3          }
 218   2          RoundKey[i * 4 + 0] = RoundKey[(i - Nk) * 4 + 0] ^ tempa[0];
 219   2          RoundKey[i * 4 + 1] = RoundKey[(i - Nk) * 4 + 1] ^ tempa[1];
 220   2          RoundKey[i * 4 + 2] = RoundKey[(i - Nk) * 4 + 2] ^ tempa[2];
 221   2          RoundKey[i * 4 + 3] = RoundKey[(i - Nk) * 4 + 3] ^ tempa[3];
 222   2        }
 223   1      }
 224          
 225          // This function adds the round key to state.
 226          // The round key is added to the state by an XOR function.
 227          void AddRoundKey(uint8_t round)
 228          {
 229   1        uint8_t i,j;
 230   1        for(i=0;i<4;++i)
 231   1        {
 232   2          for(j = 0; j < 4; ++j)
 233   2          {
 234   3            (*state)[i][j] ^= RoundKey[round * Nb * 4 + i * Nb + j];
 235   3          }
 236   2        }
 237   1      }
 238          
 239          // The SubBytes Function Substitutes the values in the
 240          // state matrix with values in an S-box.
 241          void SubBytes(void)
 242          {
 243   1        uint8_t i, j;
 244   1        for(i = 0; i < 4; ++i)
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 7   

 245   1        {
 246   2          for(j = 0; j < 4; ++j)
 247   2          {
 248   3            (*state)[j][i] = getSBoxValue((*state)[j][i]);
 249   3          }
 250   2        }
 251   1      }
 252          
 253          // The ShiftRows() function shifts the rows in the state to the left.
 254          // Each row is shifted with different offset.
 255          // Offset = Row number. So the first row is not shifted.
 256          void ShiftRows(void)
 257          {
 258   1        uint8_t temp;
 259   1      
 260   1        // Rotate first row 1 columns to left  
 261   1        temp           = (*state)[0][1];
 262   1        (*state)[0][1] = (*state)[1][1];
 263   1        (*state)[1][1] = (*state)[2][1];
 264   1        (*state)[2][1] = (*state)[3][1];
 265   1        (*state)[3][1] = temp;
 266   1      
 267   1        // Rotate second row 2 columns to left  
 268   1        temp           = (*state)[0][2];
 269   1        (*state)[0][2] = (*state)[2][2];
 270   1        (*state)[2][2] = temp;
 271   1      
 272   1        temp       = (*state)[1][2];
 273   1        (*state)[1][2] = (*state)[3][2];
 274   1        (*state)[3][2] = temp;
 275   1      
 276   1        // Rotate third row 3 columns to left
 277   1        temp       = (*state)[0][3];
 278   1        (*state)[0][3] = (*state)[3][3];
 279   1        (*state)[3][3] = (*state)[2][3];
 280   1        (*state)[2][3] = (*state)[1][3];
 281   1        (*state)[1][3] = temp;
 282   1      }
 283          
 284          uint8_t xtime(uint8_t x)
 285          {
 286   1        return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 287   1      }
 288          
 289          // MixColumns function mixes the columns of the state matrix
 290          void MixColumns(void)
 291          {
 292   1        uint8_t i;
 293   1        uint8_t Tmp,Tm,t;
 294   1        for(i = 0; i < 4; ++i)
 295   1        {  
 296   2          t   = (*state)[i][0];
 297   2          Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 298   2          Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 299   2          Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 300   2          Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 301   2          Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 302   2        }
 303   1      }
 304          
 305          // Multiply is used to multiply numbers in the field GF(2^8)
 306          #if MULTIPLY_AS_A_FUNCTION
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 8   

              static uint8_t Multiply(uint8_t x, uint8_t y)
              {
                return (((y & 1) * x) ^
                     ((y>>1 & 1) * xtime(x)) ^
                     ((y>>2 & 1) * xtime(xtime(x))) ^
                     ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^
                     ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))));
                }
              #else
 316          #define Multiply(x, y)                                \
 317                (  ((y & 1) * x) ^                              \
 318                ((y>>1 & 1) * xtime(x)) ^                       \
 319                ((y>>2 & 1) * xtime(xtime(x))) ^                \
 320                ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^         \
 321                ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))   \
 322          
 323          #endif
 324          
 325          // MixColumns function mixes the columns of the state matrix.
 326          // The method used to multiply may be difficult to understand for the inexperienced.
 327          // Please use the references to gain more information.
 328          void InvMixColumns(void)
 329          {
 330   1        int i;
 331   1        uint8_t a,b,c,d;
 332   1        for(i=0;i<4;++i)
 333   1        { 
 334   2          a = (*state)[i][0];
 335   2          b = (*state)[i][1];
 336   2          c = (*state)[i][2];
 337   2          d = (*state)[i][3];
 338   2      
 339   2          (*state)[i][0] = Multiply(a, 0x0e) ^ Multiply(b, 0x0b) ^ Multiply(c, 0x0d) ^ Multiply(d, 0x09);
 340   2          (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 341   2          (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 342   2          (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 343   2        }
 344   1      }
 345          
 346          
 347          // The SubBytes Function Substitutes the values in the
 348          // state matrix with values in an S-box.
 349          void InvSubBytes(void)
 350          {
 351   1        uint8_t i,j;
 352   1        for(i=0;i<4;++i)
 353   1        {
 354   2          for(j=0;j<4;++j)
 355   2          {
 356   3            (*state)[j][i] = getSBoxInvert((*state)[j][i]);
 357   3          }
 358   2        }
 359   1      }
 360          
 361          void InvShiftRows(void)
 362          {
 363   1        uint8_t temp;
 364   1      
 365   1        // Rotate first row 1 columns to right  
 366   1        temp=(*state)[3][1];
 367   1        (*state)[3][1]=(*state)[2][1];
 368   1        (*state)[2][1]=(*state)[1][1];
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 9   

 369   1        (*state)[1][1]=(*state)[0][1];
 370   1        (*state)[0][1]=temp;
 371   1      
 372   1        // Rotate second row 2 columns to right 
 373   1        temp=(*state)[0][2];
 374   1        (*state)[0][2]=(*state)[2][2];
 375   1        (*state)[2][2]=temp;
 376   1      
 377   1        temp=(*state)[1][2];
 378   1        (*state)[1][2]=(*state)[3][2];
 379   1        (*state)[3][2]=temp;
 380   1      
 381   1        // Rotate third row 3 columns to right
 382   1        temp=(*state)[0][3];
 383   1        (*state)[0][3]=(*state)[1][3];
 384   1        (*state)[1][3]=(*state)[2][3];
 385   1        (*state)[2][3]=(*state)[3][3];
 386   1        (*state)[3][3]=temp;
 387   1      }
 388          
 389          
 390          // Cipher is the main function that encrypts the PlainText.
 391          static void Cipher(void)
 392          {
 393   1        uint8_t round = 0;
 394   1      
 395   1        // Add the First round key to the state before starting the rounds.
 396   1        AddRoundKey(0); 
 397   1        
 398   1        // There will be Nr rounds.
 399   1        // The first Nr-1 rounds are identical.
 400   1        // These Nr-1 rounds are executed in the loop below.
 401   1        for(round = 1; round < Nr; ++round)
 402   1        {
 403   2          SubBytes();
 404   2          ShiftRows();
 405   2          MixColumns();
 406   2          AddRoundKey(round);
 407   2        }
 408   1        
 409   1        // The last round is given below.
 410   1        // The MixColumns function is not here in the last round.
 411   1        SubBytes();
 412   1        ShiftRows();
 413   1        AddRoundKey(Nr);
 414   1      }
 415          
 416          void InvCipher(void)
 417          {
 418   1        uint8_t round=0;
 419   1      
 420   1        // Add the First round key to the state before starting the rounds.
 421   1        AddRoundKey(Nr); 
 422   1      
 423   1        // There will be Nr rounds.
 424   1        // The first Nr-1 rounds are identical.
 425   1        // These Nr-1 rounds are executed in the loop below.
 426   1        for(round=Nr-1;round>0;round--)
 427   1        {
 428   2          InvShiftRows();
 429   2          InvSubBytes();
 430   2          AddRoundKey(round);
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 10  

 431   2          InvMixColumns();
 432   2        }
 433   1        
 434   1        // The last round is given below.
 435   1        // The MixColumns function is not here in the last round.
 436   1        InvShiftRows();
 437   1        InvSubBytes();
 438   1        AddRoundKey(0);
 439   1      }
 440          
 441          void BlockCopy(uint8_t* output, const uint8_t* input)
 442          {
 443   1        uint8_t i;
 444   1        for (i=0;i<KEYLEN;++i)
 445   1        {
 446   2          output[i] = input[i];
 447   2        }
 448   1      }
 449          
 450          
 451          
 452          /*****************************************************************************/
 453          /* Public functions:                                                         */
 454          /*****************************************************************************/
 455          #if defined(ECB) && ECB
 456          
 457          
 458          void AES128_ECB_encrypt(const uint8_t* input, const uint8_t* key, uint8_t* output)
 459          {
 460   1        // Copy input to output, and work in-memory on output
 461   1        BlockCopy(output, input);
 462   1        state = (state_t*)output;
 463   1      
 464   1        Key = key;
 465   1        KeyExpansion();
 466   1      
 467   1        // The next function call encrypts the PlainText with the Key using AES algorithm.
 468   1        Cipher();
 469   1      }
 470          
 471          void AES128_ECB_decrypt(const uint8_t* input, const uint8_t* key, uint8_t *output)
 472          {
 473   1        // Copy input to output, and work in-memory on output
 474   1        BlockCopy(output, input);
 475   1        state = (state_t*)output;
 476   1      
 477   1        // The KeyExpansion routine must be called before encryption.
 478   1        Key = key;
 479   1        KeyExpansion();
 480   1      
 481   1        InvCipher();
 482   1      }
 483          
 484          
 485          #endif // #if defined(ECB) && ECB
 486          
 487          
 488          
 489          
 490          
 491          #if defined(CBC) && CBC
 492          
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 11  

 493          
 494          static void XorWithIv(uint8_t* buf)
 495          {
 496   1        uint8_t i;
 497   1        for(i = 0; i < KEYLEN; ++i)
 498   1        {
 499   2          buf[i] ^= Iv[i];
 500   2        }
 501   1      }
 502          
 503          void  AES128_CBC_encrypt_buffer(uint8_t* output, uint8_t* input, uint32_t length, const uint8_t* key, cons
             -t uint8_t* iv)
 504          {
 505   1        uint16_t i;
 506   1        uint8_t remainders = length % KEYLEN; /* Remaining bytes in the last non-full block */
 507   1      
 508   1        BlockCopy(output, input);
 509   1        state = (state_t*)output;
 510   1      
 511   1        // Skip the key expansion if key is passed as 0
 512   1        if(0 != key)
 513   1        {
 514   2          Key = key;
 515   2          KeyExpansion();
 516   2        }
 517   1      
 518   1        if(iv != 0)
 519   1        {
 520   2          Iv = (uint8_t*)iv;
 521   2        }
 522   1      
 523   1        for(i = 0; i < length; i += KEYLEN)
 524   1        {
 525   2          XorWithIv(input);
 526   2          BlockCopy(output, input);
 527   2          state = (state_t*)output;
 528   2          Cipher();
 529   2          Iv = output;
 530   2          input += KEYLEN;
 531   2          output += KEYLEN;
 532   2        }
 533   1      
 534   1        if(remainders)
 535   1        {
 536   2          BlockCopy(output, input);
 537   2          memset(output + remainders, 0, KEYLEN - remainders); /* add 0-padding */
 538   2          state = (state_t*)output;
 539   2          Cipher();
 540   2        }
 541   1      }
 542          
 543          void AES128_CBC_decrypt_buffer(uint8_t* output, uint8_t* input, uint32_t length, const uint8_t* key, const
             - uint8_t* iv)
 544          {
 545   1        uint16_t i;
 546   1        uint8_t remainders = length % KEYLEN; /* Remaining bytes in the last non-full block */
 547   1        
 548   1        BlockCopy(output, input);
 549   1        state = (state_t*)output;
 550   1      
 551   1        // Skip the key expansion if key is passed as 0
 552   1        if(0 != key)
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 12  

 553   1        {
 554   2          Key = key;
 555   2          KeyExpansion();
 556   2        }
 557   1      
 558   1        // If iv is passed as 0, we continue to encrypt without re-setting the Iv
 559   1        if(iv != 0)
 560   1        {
 561   2          Iv = (uint8_t*)iv;
 562   2        }
 563   1      
 564   1        for(i = 0; i < length; i += KEYLEN)
 565   1        {
 566   2          BlockCopy(output, input);
 567   2          state = (state_t*)output;
 568   2          InvCipher();
 569   2          XorWithIv(output);
 570   2          Iv = input;
 571   2          input += KEYLEN;
 572   2          output += KEYLEN;
 573   2        }
 574   1      
 575   1        if(remainders)
 576   1        {
 577   2          BlockCopy(output, input);
 578   2          memset(output+remainders, 0, KEYLEN - remainders); /* add 0-padding */
 579   2          state = (state_t*)output;
 580   2          InvCipher();
 581   2        }
 582   1      }
 583          
 584          
 585          #endif // #if defined(CBC) && CBC
 586          
 587          
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0099 (BEGIN)
0000         L?0100:
0000 EF                MOV     A,R7
0001 F0                MOVX    @DPTR,A
0002 A3                INC     DPTR
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
             ; FUNCTION _getSBoxValue (BEGIN)
                                           ; SOURCE LINE # 149
;---- Variable 'num' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0005 EF                MOV     A,R7
0006 900000      R     MOV     DPTR,#sbox
0009 93                MOVC    A,@A+DPTR
000A FF                MOV     R7,A
                                           ; SOURCE LINE # 152
000B         ?C0001:
000B 22                RET     
             ; FUNCTION _getSBoxValue (END)

             ; FUNCTION _getSBoxInvert (BEGIN)
                                           ; SOURCE LINE # 154
;---- Variable 'num' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0000 EF                MOV     A,R7
0001 900000      R     MOV     DPTR,#rsbox
0004 93                MOVC    A,@A+DPTR
0005 FF                MOV     R7,A
                                           ; SOURCE LINE # 157
0006         ?C0002:
0006 22                RET     
             ; FUNCTION _getSBoxInvert (END)

             ; FUNCTION L?0094 (BEGIN)
0000 E0                MOVX    A,@DPTR
0001 F9                MOV     R1,A
0002 A3                INC     DPTR
0003 E0                MOVX    A,@DPTR
0004 FA                MOV     R2,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 C9                XCH     A,R1
0008         L?0095:
0008 900000      R     MOV     DPTR,#Key
000B         L?0096:
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D EA                MOV     A,R2
000E F0                MOVX    @DPTR,A
000F A3                INC     DPTR
0010 E9                MOV     A,R1
0011 F0                MOVX    @DPTR,A
             ; FUNCTION KeyExpansion (BEGIN)
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 166
0012 900000      R     MOV     DPTR,#i
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 14  

0015 120000      E     LCALL   ?C?LSTKXDATA
0018 00                DB      00H
0019 00                DB      00H
001A 00                DB      00H
001B 00                DB      00H
001C         ?C0003:
001C E4                CLR     A
001D 7F04              MOV     R7,#04H
001F FE                MOV     R6,A
0020 FD                MOV     R5,A
0021 FC                MOV     R4,A
0022 900000      R     MOV     DPTR,#i
0025 E0                MOVX    A,@DPTR
0026 F8                MOV     R0,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 F9                MOV     R1,A
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C FA                MOV     R2,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F FB                MOV     R3,A
0030 C3                CLR     C
0031 120000      E     LCALL   ?C?ULCMP
0034 4003              JC      $ + 5H
0036 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
0039 E4                CLR     A
003A 7F04              MOV     R7,#04H
003C FE                MOV     R6,A
003D FD                MOV     R5,A
003E FC                MOV     R4,A
003F 900000      R     MOV     DPTR,#i
0042 E0                MOVX    A,@DPTR
0043 F8                MOV     R0,A
0044 A3                INC     DPTR
0045 A3                INC     DPTR
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 120000      E     LCALL   ?C?LMUL
004B 900000      R     MOV     DPTR,#Key
004E E0                MOVX    A,@DPTR
004F FB                MOV     R3,A
0050 A3                INC     DPTR
0051 E0                MOVX    A,@DPTR
0052 FA                MOV     R2,A
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 F9                MOV     R1,A
0056 8F82              MOV     DPL,R7
0058 8E83              MOV     DPH,R6
005A 120000      E     LCALL   ?C?CLDOPTR
005D FD                MOV     R5,A
005E 900000      R     MOV     DPTR,#i
0061 A3                INC     DPTR
0062 A3                INC     DPTR
0063 E0                MOVX    A,@DPTR
0064 FA                MOV     R2,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 15  

0067 900000      R     MOV     DPTR,#RoundKey
006A 75F004            MOV     B,#04H
006D 120000      E     LCALL   ?C?OFFXADD
0070 EA                MOV     A,R2
0071 25E0              ADD     A,ACC
0073 25E0              ADD     A,ACC
0075 2583              ADD     A,DPH
0077 F583              MOV     DPH,A
0079 ED                MOV     A,R5
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
007B EF                MOV     A,R7
007C 2401              ADD     A,#01H
007E FF                MOV     R7,A
007F E4                CLR     A
0080 3E                ADDC    A,R6
0081 FE                MOV     R6,A
0082 900000      R     MOV     DPTR,#Key
0085 E0                MOVX    A,@DPTR
0086 FB                MOV     R3,A
0087 A3                INC     DPTR
0088 E0                MOVX    A,@DPTR
0089 FA                MOV     R2,A
008A A3                INC     DPTR
008B E0                MOVX    A,@DPTR
008C F9                MOV     R1,A
008D 8F82              MOV     DPL,R7
008F 8E83              MOV     DPH,R6
0091 120000      E     LCALL   ?C?CLDOPTR
0094 FF                MOV     R7,A
0095 900000      R     MOV     DPTR,#i
0098 A3                INC     DPTR
0099 A3                INC     DPTR
009A E0                MOVX    A,@DPTR
009B FA                MOV     R2,A
009C A3                INC     DPTR
009D E0                MOVX    A,@DPTR
009E 900000      R     MOV     DPTR,#RoundKey+01H
00A1 75F004            MOV     B,#04H
00A4 120000      E     LCALL   ?C?OFFXADD
00A7 EA                MOV     A,R2
00A8 25E0              ADD     A,ACC
00AA 25E0              ADD     A,ACC
00AC 2583              ADD     A,DPH
00AE F583              MOV     DPH,A
00B0 EF                MOV     A,R7
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
00B2 E4                CLR     A
00B3 7F04              MOV     R7,#04H
00B5 FE                MOV     R6,A
00B6 FD                MOV     R5,A
00B7 FC                MOV     R4,A
00B8 900000      R     MOV     DPTR,#i
00BB E0                MOVX    A,@DPTR
00BC F8                MOV     R0,A
00BD A3                INC     DPTR
00BE E0                MOVX    A,@DPTR
00BF F9                MOV     R1,A
00C0 A3                INC     DPTR
00C1 E0                MOVX    A,@DPTR
00C2 FA                MOV     R2,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 16  

00C3 A3                INC     DPTR
00C4 E0                MOVX    A,@DPTR
00C5 FB                MOV     R3,A
00C6 120000      E     LCALL   ?C?LMUL
00C9 EF                MOV     A,R7
00CA 2402              ADD     A,#02H
00CC FD                MOV     R5,A
00CD E4                CLR     A
00CE 3E                ADDC    A,R6
00CF FC                MOV     R4,A
00D0 900000      R     MOV     DPTR,#Key
00D3 E0                MOVX    A,@DPTR
00D4 FB                MOV     R3,A
00D5 A3                INC     DPTR
00D6 E0                MOVX    A,@DPTR
00D7 FA                MOV     R2,A
00D8 A3                INC     DPTR
00D9 E0                MOVX    A,@DPTR
00DA F9                MOV     R1,A
00DB 8D82              MOV     DPL,R5
00DD 8C83              MOV     DPH,R4
00DF 120000      E     LCALL   ?C?CLDOPTR
00E2 FD                MOV     R5,A
00E3 900000      R     MOV     DPTR,#i
00E6 A3                INC     DPTR
00E7 A3                INC     DPTR
00E8 E0                MOVX    A,@DPTR
00E9 FA                MOV     R2,A
00EA A3                INC     DPTR
00EB E0                MOVX    A,@DPTR
00EC 900000      R     MOV     DPTR,#RoundKey+02H
00EF 75F004            MOV     B,#04H
00F2 120000      E     LCALL   ?C?OFFXADD
00F5 EA                MOV     A,R2
00F6 25E0              ADD     A,ACC
00F8 25E0              ADD     A,ACC
00FA 2583              ADD     A,DPH
00FC F583              MOV     DPH,A
00FE ED                MOV     A,R5
00FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
0100 EF                MOV     A,R7
0101 2403              ADD     A,#03H
0103 FF                MOV     R7,A
0104 E4                CLR     A
0105 3E                ADDC    A,R6
0106 FE                MOV     R6,A
0107 900000      R     MOV     DPTR,#Key
010A E0                MOVX    A,@DPTR
010B FB                MOV     R3,A
010C A3                INC     DPTR
010D E0                MOVX    A,@DPTR
010E FA                MOV     R2,A
010F A3                INC     DPTR
0110 E0                MOVX    A,@DPTR
0111 F9                MOV     R1,A
0112 8F82              MOV     DPL,R7
0114 8E83              MOV     DPH,R6
0116 120000      E     LCALL   ?C?CLDOPTR
0119 FF                MOV     R7,A
011A 900000      R     MOV     DPTR,#i
011D A3                INC     DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 17  

011E A3                INC     DPTR
011F E0                MOVX    A,@DPTR
0120 FA                MOV     R2,A
0121 A3                INC     DPTR
0122 E0                MOVX    A,@DPTR
0123 900000      R     MOV     DPTR,#RoundKey+03H
0126 75F004            MOV     B,#04H
0129 120000      E     LCALL   ?C?OFFXADD
012C EA                MOV     A,R2
012D 25E0              ADD     A,ACC
012F 25E0              ADD     A,ACC
0131 2583              ADD     A,DPH
0133 F583              MOV     DPH,A
0135 EF                MOV     A,R7
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
0137 900000      R     MOV     DPTR,#i
013A E0                MOVX    A,@DPTR
013B FC                MOV     R4,A
013C A3                INC     DPTR
013D E0                MOVX    A,@DPTR
013E FD                MOV     R5,A
013F A3                INC     DPTR
0140 E0                MOVX    A,@DPTR
0141 FE                MOV     R6,A
0142 A3                INC     DPTR
0143 E0                MOVX    A,@DPTR
0144 2401              ADD     A,#01H
0146 FF                MOV     R7,A
0147 E4                CLR     A
0148 3E                ADDC    A,R6
0149 FE                MOV     R6,A
014A E4                CLR     A
014B 3D                ADDC    A,R5
014C FD                MOV     R5,A
014D E4                CLR     A
014E 3C                ADDC    A,R4
014F FC                MOV     R4,A
0150 900000      R     MOV     DPTR,#i
0153 120000      E     LCALL   ?C?LSTXDATA
0156 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 175
0159         ?C0006:
0159 E4                CLR     A
015A 7F2C              MOV     R7,#02CH
015C FE                MOV     R6,A
015D FD                MOV     R5,A
015E FC                MOV     R4,A
015F 900000      R     MOV     DPTR,#i
0162 E0                MOVX    A,@DPTR
0163 F8                MOV     R0,A
0164 A3                INC     DPTR
0165 E0                MOVX    A,@DPTR
0166 F9                MOV     R1,A
0167 A3                INC     DPTR
0168 E0                MOVX    A,@DPTR
0169 FA                MOV     R2,A
016A A3                INC     DPTR
016B E0                MOVX    A,@DPTR
016C FB                MOV     R3,A
016D C3                CLR     C
016E 120000      E     LCALL   ?C?ULCMP
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 18  

0171 4003              JC      $ + 5H
0173 020000      R     LJMP    ?C0015
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
0176 900000      R     MOV     DPTR,#j
0179 120000      E     LCALL   ?C?LSTKXDATA
017C 00                DB      00H
017D 00                DB      00H
017E 00                DB      00H
017F 00                DB      00H
0180         ?C0009:
0180 E4                CLR     A
0181 7F04              MOV     R7,#04H
0183 FE                MOV     R6,A
0184 FD                MOV     R5,A
0185 FC                MOV     R4,A
0186 900000      R     MOV     DPTR,#j
0189 E0                MOVX    A,@DPTR
018A F8                MOV     R0,A
018B A3                INC     DPTR
018C E0                MOVX    A,@DPTR
018D F9                MOV     R1,A
018E A3                INC     DPTR
018F E0                MOVX    A,@DPTR
0190 FA                MOV     R2,A
0191 A3                INC     DPTR
0192 E0                MOVX    A,@DPTR
0193 FB                MOV     R3,A
0194 C3                CLR     C
0195 120000      E     LCALL   ?C?ULCMP
0198 505A              JNC     ?C0010
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
019A E4                CLR     A
019B 7F04              MOV     R7,#04H
019D FE                MOV     R6,A
019E FD                MOV     R5,A
019F FC                MOV     R4,A
01A0 900000      R     MOV     DPTR,#i
01A3 E0                MOVX    A,@DPTR
01A4 F8                MOV     R0,A
01A5 A3                INC     DPTR
01A6 E0                MOVX    A,@DPTR
01A7 F9                MOV     R1,A
01A8 A3                INC     DPTR
01A9 E0                MOVX    A,@DPTR
01AA FA                MOV     R2,A
01AB A3                INC     DPTR
01AC E0                MOVX    A,@DPTR
01AD FB                MOV     R3,A
01AE 120000      E     LCALL   ?C?LMUL
01B1 AB07              MOV     R3,AR7
01B3 900000      R     MOV     DPTR,#j
01B6 A3                INC     DPTR
01B7 A3                INC     DPTR
01B8 A3                INC     DPTR
01B9 E0                MOVX    A,@DPTR
01BA FF                MOV     R7,A
01BB 2B                ADD     A,R3
01BC 2400        R     ADD     A,#LOW RoundKey+0FFFCH
01BE F582              MOV     DPL,A
01C0 E4                CLR     A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 19  

01C1 3400        R     ADDC    A,#HIGH RoundKey+0FFFCH
01C3 F583              MOV     DPH,A
01C5 E0                MOVX    A,@DPTR
01C6 FE                MOV     R6,A
01C7 7400        R     MOV     A,#LOW tempa
01C9 2F                ADD     A,R7
01CA F582              MOV     DPL,A
01CC E4                CLR     A
01CD 3400        R     ADDC    A,#HIGH tempa
01CF F583              MOV     DPH,A
01D1 EE                MOV     A,R6
01D2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
01D3 900000      R     MOV     DPTR,#j
01D6 E0                MOVX    A,@DPTR
01D7 FC                MOV     R4,A
01D8 A3                INC     DPTR
01D9 E0                MOVX    A,@DPTR
01DA FD                MOV     R5,A
01DB A3                INC     DPTR
01DC E0                MOVX    A,@DPTR
01DD FE                MOV     R6,A
01DE A3                INC     DPTR
01DF E0                MOVX    A,@DPTR
01E0 2401              ADD     A,#01H
01E2 FF                MOV     R7,A
01E3 E4                CLR     A
01E4 3E                ADDC    A,R6
01E5 FE                MOV     R6,A
01E6 E4                CLR     A
01E7 3D                ADDC    A,R5
01E8 FD                MOV     R5,A
01E9 E4                CLR     A
01EA 3C                ADDC    A,R4
01EB FC                MOV     R4,A
01EC 900000      R     MOV     DPTR,#j
01EF 120000      E     LCALL   ?C?LSTXDATA
01F2 808C              SJMP    ?C0009
01F4         ?C0010:
                                           ; SOURCE LINE # 181
01F4 900000      R     MOV     DPTR,#i
01F7 A3                INC     DPTR
01F8 A3                INC     DPTR
01F9 A3                INC     DPTR
01FA E0                MOVX    A,@DPTR
01FB 5403              ANL     A,#03H
01FD FF                MOV     R7,A
01FE E4                CLR     A
01FF FE                MOV     R6,A
0200 FD                MOV     R5,A
0201 FC                MOV     R4,A
0202 FB                MOV     R3,A
0203 FA                MOV     R2,A
0204 F9                MOV     R1,A
0205 F8                MOV     R0,A
0206 C3                CLR     C
0207 120000      E     LCALL   ?C?ULCMP
020A 6003              JZ      $ + 5H
020C 020000      R     LJMP    ?C0013
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 20  

020F 900000      R     MOV     DPTR,#tempa
0212 E0                MOVX    A,@DPTR
0213 FF                MOV     R7,A
0214 E4                CLR     A
0215 FC                MOV     R4,A
0216 FD                MOV     R5,A
0217 FE                MOV     R6,A
0218 900000      R     MOV     DPTR,#k
021B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 189
021E 900000      R     MOV     DPTR,#tempa+01H
0221 E0                MOVX    A,@DPTR
0222 900000      R     MOV     DPTR,#tempa
0225 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
0226 900000      R     MOV     DPTR,#tempa+02H
0229 E0                MOVX    A,@DPTR
022A 900000      R     MOV     DPTR,#tempa+01H
022D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
022E 900000      R     MOV     DPTR,#tempa+03H
0231 E0                MOVX    A,@DPTR
0232 900000      R     MOV     DPTR,#tempa+02H
0235 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
0236 900000      R     MOV     DPTR,#k
0239 A3                INC     DPTR
023A A3                INC     DPTR
023B A3                INC     DPTR
023C E0                MOVX    A,@DPTR
023D 900000      R     MOV     DPTR,#tempa+03H
0240 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0241 900000      R     MOV     DPTR,#tempa
0244 E0                MOVX    A,@DPTR
0245 FF                MOV     R7,A
0246 120000      R     LCALL   _getSBoxValue
0249 900000      R     MOV     DPTR,#tempa
                                           ; SOURCE LINE # 201
024C 120000      R     LCALL   L?0099
024F 900000      R     MOV     DPTR,#tempa+01H
                                           ; SOURCE LINE # 202
0252 120000      R     LCALL   L?0099
0255 900000      R     MOV     DPTR,#tempa+02H
                                           ; SOURCE LINE # 203
0258 120000      R     LCALL   L?0100
025B 900000      R     MOV     DPTR,#tempa+03H
025E EF                MOV     A,R7
025F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 206
0260 900000      R     MOV     DPTR,#tempa
0263 E0                MOVX    A,@DPTR
0264 FF                MOV     R7,A
0265 C007              PUSH    AR7
0267 E4                CLR     A
0268 7B04              MOV     R3,#04H
026A F8                MOV     R0,A
026B 900000      R     MOV     DPTR,#i
026E E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 21  

026F FC                MOV     R4,A
0270 A3                INC     DPTR
0271 E0                MOVX    A,@DPTR
0272 FD                MOV     R5,A
0273 A3                INC     DPTR
0274 E0                MOVX    A,@DPTR
0275 FE                MOV     R6,A
0276 A3                INC     DPTR
0277 E0                MOVX    A,@DPTR
0278 FF                MOV     R7,A
0279 120000      E     LCALL   ?C?ULDIV
027C 7400        R     MOV     A,#LOW Rcon
027E 2F                ADD     A,R7
027F F582              MOV     DPL,A
0281 7400        R     MOV     A,#HIGH Rcon
0283 3E                ADDC    A,R6
0284 F583              MOV     DPH,A
0286 E4                CLR     A
0287 93                MOVC    A,@A+DPTR
0288 FE                MOV     R6,A
0289 D0E0              POP     ACC
028B 6E                XRL     A,R6
028C 900000      R     MOV     DPTR,#tempa
028F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
0290         ?C0013:
                                           ; SOURCE LINE # 218
0290 900000      R     MOV     DPTR,#i
0293 A3                INC     DPTR
0294 A3                INC     DPTR
0295 E0                MOVX    A,@DPTR
0296 FE                MOV     R6,A
0297 A3                INC     DPTR
0298 E0                MOVX    A,@DPTR
0299 900000      R     MOV     DPTR,#RoundKey-010H
029C 75F004            MOV     B,#04H
029F 120000      E     LCALL   ?C?OFFXADD
02A2 EE                MOV     A,R6
02A3 25E0              ADD     A,ACC
02A5 25E0              ADD     A,ACC
02A7 2583              ADD     A,DPH
02A9 F583              MOV     DPH,A
02AB E0                MOVX    A,@DPTR
02AC FF                MOV     R7,A
02AD 900000      R     MOV     DPTR,#tempa
02B0 E0                MOVX    A,@DPTR
02B1 FE                MOV     R6,A
02B2 EF                MOV     A,R7
02B3 6E                XRL     A,R6
02B4 FF                MOV     R7,A
02B5 900000      R     MOV     DPTR,#i
02B8 A3                INC     DPTR
02B9 A3                INC     DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 22  

02BA E0                MOVX    A,@DPTR
02BB FA                MOV     R2,A
02BC A3                INC     DPTR
02BD E0                MOVX    A,@DPTR
02BE 900000      R     MOV     DPTR,#RoundKey
02C1 75F004            MOV     B,#04H
02C4 120000      E     LCALL   ?C?OFFXADD
02C7 EA                MOV     A,R2
02C8 25E0              ADD     A,ACC
02CA 25E0              ADD     A,ACC
02CC 2583              ADD     A,DPH
02CE F583              MOV     DPH,A
02D0 EF                MOV     A,R7
02D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
02D2 900000      R     MOV     DPTR,#i
02D5 A3                INC     DPTR
02D6 A3                INC     DPTR
02D7 E0                MOVX    A,@DPTR
02D8 FE                MOV     R6,A
02D9 A3                INC     DPTR
02DA E0                MOVX    A,@DPTR
02DB 900000      R     MOV     DPTR,#RoundKey-0FH
02DE 75F004            MOV     B,#04H
02E1 120000      E     LCALL   ?C?OFFXADD
02E4 EE                MOV     A,R6
02E5 25E0              ADD     A,ACC
02E7 25E0              ADD     A,ACC
02E9 2583              ADD     A,DPH
02EB F583              MOV     DPH,A
02ED E0                MOVX    A,@DPTR
02EE FF                MOV     R7,A
02EF 900000      R     MOV     DPTR,#tempa+01H
02F2 E0                MOVX    A,@DPTR
02F3 FE                MOV     R6,A
02F4 EF                MOV     A,R7
02F5 6E                XRL     A,R6
02F6 FF                MOV     R7,A
02F7 900000      R     MOV     DPTR,#i
02FA A3                INC     DPTR
02FB A3                INC     DPTR
02FC E0                MOVX    A,@DPTR
02FD FA                MOV     R2,A
02FE A3                INC     DPTR
02FF E0                MOVX    A,@DPTR
0300 900000      R     MOV     DPTR,#RoundKey+01H
0303 75F004            MOV     B,#04H
0306 120000      E     LCALL   ?C?OFFXADD
0309 EA                MOV     A,R2
030A 25E0              ADD     A,ACC
030C 25E0              ADD     A,ACC
030E 2583              ADD     A,DPH
0310 F583              MOV     DPH,A
0312 EF                MOV     A,R7
0313 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
0314 900000      R     MOV     DPTR,#i
0317 A3                INC     DPTR
0318 A3                INC     DPTR
0319 E0                MOVX    A,@DPTR
031A FE                MOV     R6,A
031B A3                INC     DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 23  

031C E0                MOVX    A,@DPTR
031D 900000      R     MOV     DPTR,#RoundKey-0EH
0320 75F004            MOV     B,#04H
0323 120000      E     LCALL   ?C?OFFXADD
0326 EE                MOV     A,R6
0327 25E0              ADD     A,ACC
0329 25E0              ADD     A,ACC
032B 2583              ADD     A,DPH
032D F583              MOV     DPH,A
032F E0                MOVX    A,@DPTR
0330 FF                MOV     R7,A
0331 900000      R     MOV     DPTR,#tempa+02H
0334 E0                MOVX    A,@DPTR
0335 FE                MOV     R6,A
0336 EF                MOV     A,R7
0337 6E                XRL     A,R6
0338 FF                MOV     R7,A
0339 900000      R     MOV     DPTR,#i
033C A3                INC     DPTR
033D A3                INC     DPTR
033E E0                MOVX    A,@DPTR
033F FA                MOV     R2,A
0340 A3                INC     DPTR
0341 E0                MOVX    A,@DPTR
0342 900000      R     MOV     DPTR,#RoundKey+02H
0345 75F004            MOV     B,#04H
0348 120000      E     LCALL   ?C?OFFXADD
034B EA                MOV     A,R2
034C 25E0              ADD     A,ACC
034E 25E0              ADD     A,ACC
0350 2583              ADD     A,DPH
0352 F583              MOV     DPH,A
0354 EF                MOV     A,R7
0355 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0356 900000      R     MOV     DPTR,#i
0359 A3                INC     DPTR
035A A3                INC     DPTR
035B E0                MOVX    A,@DPTR
035C FE                MOV     R6,A
035D A3                INC     DPTR
035E E0                MOVX    A,@DPTR
035F 900000      R     MOV     DPTR,#RoundKey-0DH
0362 75F004            MOV     B,#04H
0365 120000      E     LCALL   ?C?OFFXADD
0368 EE                MOV     A,R6
0369 25E0              ADD     A,ACC
036B 25E0              ADD     A,ACC
036D 2583              ADD     A,DPH
036F F583              MOV     DPH,A
0371 E0                MOVX    A,@DPTR
0372 FF                MOV     R7,A
0373 900000      R     MOV     DPTR,#tempa+03H
0376 E0                MOVX    A,@DPTR
0377 FE                MOV     R6,A
0378 EF                MOV     A,R7
0379 6E                XRL     A,R6
037A FF                MOV     R7,A
037B 900000      R     MOV     DPTR,#i
037E A3                INC     DPTR
037F A3                INC     DPTR
0380 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 24  

0381 FA                MOV     R2,A
0382 A3                INC     DPTR
0383 E0                MOVX    A,@DPTR
0384 900000      R     MOV     DPTR,#RoundKey+03H
0387 75F004            MOV     B,#04H
038A 120000      E     LCALL   ?C?OFFXADD
038D EA                MOV     A,R2
038E 25E0              ADD     A,ACC
0390 25E0              ADD     A,ACC
0392 2583              ADD     A,DPH
0394 F583              MOV     DPH,A
0396 EF                MOV     A,R7
0397 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
0398 900000      R     MOV     DPTR,#i
039B E0                MOVX    A,@DPTR
039C FC                MOV     R4,A
039D A3                INC     DPTR
039E E0                MOVX    A,@DPTR
039F FD                MOV     R5,A
03A0 A3                INC     DPTR
03A1 E0                MOVX    A,@DPTR
03A2 FE                MOV     R6,A
03A3 A3                INC     DPTR
03A4 E0                MOVX    A,@DPTR
03A5 2401              ADD     A,#01H
03A7 FF                MOV     R7,A
03A8 E4                CLR     A
03A9 3E                ADDC    A,R6
03AA FE                MOV     R6,A
03AB E4                CLR     A
03AC 3D                ADDC    A,R5
03AD FD                MOV     R5,A
03AE E4                CLR     A
03AF 3C                ADDC    A,R4
03B0 FC                MOV     R4,A
03B1 900000      R     MOV     DPTR,#i
03B4 120000      E     LCALL   ?C?LSTXDATA
03B7 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 223
03BA         ?C0015:
03BA 22                RET     
             ; FUNCTION KeyExpansion (END)

             ; FUNCTION _AddRoundKey (BEGIN)
                                           ; SOURCE LINE # 227
0000 900000      R     MOV     DPTR,#round
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 230
0005 E4                CLR     A
0006 A3                INC     DPTR
0007 F0                MOVX    @DPTR,A
0008         ?C0016:
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0008 E4                CLR     A
0009 900000      R     MOV     DPTR,#j
000C F0                MOVX    @DPTR,A
000D         ?C0019:
                                           ; SOURCE LINE # 233
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 25  

                                           ; SOURCE LINE # 234
000D 900000      R     MOV     DPTR,#i
0010 E0                MOVX    A,@DPTR
0011 75F004            MOV     B,#04H
0014 A4                MUL     AB
0015 FF                MOV     R7,A
0016 900000      R     MOV     DPTR,#state
0019 E0                MOVX    A,@DPTR
001A FB                MOV     R3,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FA                MOV     R2,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 2F                ADD     A,R7
0021 F9                MOV     R1,A
0022 EA                MOV     A,R2
0023 35F0              ADDC    A,B
0025 FA                MOV     R2,A
0026 900000      R     MOV     DPTR,#j
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 7C00              MOV     R4,#00H
002D 29                ADD     A,R1
002E F9                MOV     R1,A
002F EC                MOV     A,R4
0030 3A                ADDC    A,R2
0031 FA                MOV     R2,A
0032 120000      E     LCALL   ?C?CLDPTR
0035 FE                MOV     R6,A
0036 900000      R     MOV     DPTR,#i
0039 E0                MOVX    A,@DPTR
003A 25E0              ADD     A,ACC
003C 25E0              ADD     A,ACC
003E FD                MOV     R5,A
003F 900000      R     MOV     DPTR,#round
0042 E0                MOVX    A,@DPTR
0043 C4                SWAP    A
0044 54F0              ANL     A,#0F0H
0046 2D                ADD     A,R5
0047 FD                MOV     R5,A
0048 EF                MOV     A,R7
0049 2D                ADD     A,R5
004A 2400        R     ADD     A,#LOW RoundKey
004C F582              MOV     DPL,A
004E E4                CLR     A
004F 3400        R     ADDC    A,#HIGH RoundKey
0051 F583              MOV     DPH,A
0053 E0                MOVX    A,@DPTR
0054 6E                XRL     A,R6
0055 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 235
0058 900000      R     MOV     DPTR,#j
005B E0                MOVX    A,@DPTR
005C 04                INC     A
005D F0                MOVX    @DPTR,A
005E E0                MOVX    A,@DPTR
005F B404AB            CJNE    A,#04H,?C0019
                                           ; SOURCE LINE # 236
0062         ?C0018:
0062 900000      R     MOV     DPTR,#i
0065 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 26  

0066 04                INC     A
0067 F0                MOVX    @DPTR,A
0068 E0                MOVX    A,@DPTR
0069 B4049C            CJNE    A,#04H,?C0016
                                           ; SOURCE LINE # 237
006C         ?C0022:
006C 22                RET     
             ; FUNCTION _AddRoundKey (END)

             ; FUNCTION SubBytes (BEGIN)
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 244
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005         ?C0023:
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
0005 E4                CLR     A
0006 900000      R     MOV     DPTR,#j
0009 F0                MOVX    @DPTR,A
000A         ?C0026:
000A 900000      R     MOV     DPTR,#j
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F C3                CLR     C
0010 9404              SUBB    A,#04H
0012 505A              JNC     ?C0025
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0014 EF                MOV     A,R7
0015 75F004            MOV     B,#04H
0018 A4                MUL     AB
0019 FF                MOV     R7,A
001A 900000      R     MOV     DPTR,#state
001D E0                MOVX    A,@DPTR
001E FB                MOV     R3,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FA                MOV     R2,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 2F                ADD     A,R7
0025 F9                MOV     R1,A
0026 EA                MOV     A,R2
0027 35F0              ADDC    A,B
0029 FA                MOV     R2,A
002A 900000      R     MOV     DPTR,#i
002D E0                MOVX    A,@DPTR
002E 7E00              MOV     R6,#00H
0030 29                ADD     A,R1
0031 F9                MOV     R1,A
0032 EE                MOV     A,R6
0033 3A                ADDC    A,R2
0034 FA                MOV     R2,A
0035 120000      E     LCALL   ?C?CLDPTR
0038 FF                MOV     R7,A
0039 120000      R     LCALL   _getSBoxValue
003C AD07              MOV     R5,AR7
003E 900000      R     MOV     DPTR,#j
0041 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 27  

0042 75F004            MOV     B,#04H
0045 A4                MUL     AB
0046 FF                MOV     R7,A
0047 900000      R     MOV     DPTR,#state
004A E0                MOVX    A,@DPTR
004B FB                MOV     R3,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E FA                MOV     R2,A
004F A3                INC     DPTR
0050 E0                MOVX    A,@DPTR
0051 2F                ADD     A,R7
0052 F9                MOV     R1,A
0053 EA                MOV     A,R2
0054 35F0              ADDC    A,B
0056 FA                MOV     R2,A
0057 900000      R     MOV     DPTR,#i
005A E0                MOVX    A,@DPTR
005B 7E00              MOV     R6,#00H
005D 29                ADD     A,R1
005E F9                MOV     R1,A
005F EE                MOV     A,R6
0060 3A                ADDC    A,R2
0061 FA                MOV     R2,A
0062 ED                MOV     A,R5
0063 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 249
0066 900000      R     MOV     DPTR,#j
0069 E0                MOVX    A,@DPTR
006A 04                INC     A
006B F0                MOVX    @DPTR,A
006C 809C              SJMP    ?C0026
                                           ; SOURCE LINE # 250
006E         ?C0025:
006E 900000      R     MOV     DPTR,#i
0071 E0                MOVX    A,@DPTR
0072 04                INC     A
0073 F0                MOVX    @DPTR,A
0074 E0                MOVX    A,@DPTR
0075 C3                CLR     C
0076 9404              SUBB    A,#04H
0078 408B              JC      ?C0023
                                           ; SOURCE LINE # 251
007A         ?C0029:
007A 22                RET     
             ; FUNCTION SubBytes (END)

             ; FUNCTION ShiftRows (BEGIN)
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 261
0000 900000      R     MOV     DPTR,#state
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FA                MOV     R2,A
0008 A3                INC     DPTR
0009 E0                MOVX    A,@DPTR
000A F9                MOV     R1,A
000B 900001            MOV     DPTR,#01H
000E 120000      E     LCALL   ?C?CLDOPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 28  

0011 FF                MOV     R7,A
;---- Variable 'temp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 262
0012 900005            MOV     DPTR,#05H
0015 120000      E     LCALL   ?C?CLDOPTR
0018 900001            MOV     DPTR,#01H
001B 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 263
001E 900009            MOV     DPTR,#09H
0021 120000      E     LCALL   ?C?CLDOPTR
0024 900005            MOV     DPTR,#05H
0027 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 264
002A 90000D            MOV     DPTR,#0DH
002D 120000      E     LCALL   ?C?CLDOPTR
0030 900009            MOV     DPTR,#09H
0033 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 265
0036 90000D            MOV     DPTR,#0DH
0039 EF                MOV     A,R7
003A 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 268
003D 900002            MOV     DPTR,#02H
0040 120000      E     LCALL   ?C?CLDOPTR
0043 FF                MOV     R7,A
                                           ; SOURCE LINE # 269
0044 90000A            MOV     DPTR,#0AH
0047 120000      E     LCALL   ?C?CLDOPTR
004A 900002            MOV     DPTR,#02H
004D 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 270
0050 90000A            MOV     DPTR,#0AH
0053 EF                MOV     A,R7
0054 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 272
0057 900006            MOV     DPTR,#06H
005A 120000      E     LCALL   ?C?CLDOPTR
005D FF                MOV     R7,A
                                           ; SOURCE LINE # 273
005E 90000E            MOV     DPTR,#0EH
0061 120000      E     LCALL   ?C?CLDOPTR
0064 900006            MOV     DPTR,#06H
0067 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 274
006A 90000E            MOV     DPTR,#0EH
006D EF                MOV     A,R7
006E 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 277
0071 900003            MOV     DPTR,#03H
0074 120000      E     LCALL   ?C?CLDOPTR
0077 FF                MOV     R7,A
                                           ; SOURCE LINE # 278
0078 90000F            MOV     DPTR,#0FH
007B 120000      E     LCALL   ?C?CLDOPTR
007E 900003            MOV     DPTR,#03H
0081 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 279
0084 90000B            MOV     DPTR,#0BH
0087 120000      E     LCALL   ?C?CLDOPTR
008A 90000F            MOV     DPTR,#0FH
008D 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 280
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 29  

0090 900007            MOV     DPTR,#07H
0093 120000      E     LCALL   ?C?CLDOPTR
0096 90000B            MOV     DPTR,#0BH
0099 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 281
009C 900007            MOV     DPTR,#07H
009F EF                MOV     A,R7
00A0 020000      E     LJMP    ?C?CSTOPTR
             ; FUNCTION ShiftRows (END)

             ; FUNCTION L?0086 (BEGIN)
0000 FD                MOV     R5,A
0001 E0                MOVX    A,@DPTR
0002 FF                MOV     R7,A
0003 120000      R     LCALL   _xtime
0006 120000      R     LCALL   _xtime
0009 120000      R     LCALL   _xtime
000C AC07              MOV     R4,AR7
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010         L?0087:
0010 120000      R     LCALL   _xtime
0013 E0                MOVX    A,@DPTR
0014 6F                XRL     A,R7
0015         L?0088:
0015 6C                XRL     A,R4
0016         L?0089:
0016 6D                XRL     A,R5
0017 A3                INC     DPTR
0018         L?0090:
0018 FD                MOV     R5,A
0019         L?0091:
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 120000      R     LCALL   _xtime
001E 120000      R     LCALL   _xtime
             ; FUNCTION _xtime (BEGIN)
                                           ; SOURCE LINE # 284
;---- Variable 'x' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 13                RRC     A
0024 13                RRC     A
0025 13                RRC     A
0026 5401              ANL     A,#01H
0028 75F01B            MOV     B,#01BH
002B A4                MUL     AB
002C FE                MOV     R6,A
002D EF                MOV     A,R7
002E 25E0              ADD     A,ACC
0030 6E                XRL     A,R6
0031 FF                MOV     R7,A
                                           ; SOURCE LINE # 287
0032         ?C0031:
0032 22                RET     
             ; FUNCTION _xtime (END)

             ; FUNCTION MixColumns (BEGIN)
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 30  

                                           ; SOURCE LINE # 294
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005         ?C0032:
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
0005 900000      R     MOV     DPTR,#state
0008 E0                MOVX    A,@DPTR
0009 FB                MOV     R3,A
000A A3                INC     DPTR
000B E0                MOVX    A,@DPTR
000C FA                MOV     R2,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F F9                MOV     R1,A
0010 900000      R     MOV     DPTR,#i
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 75F004            MOV     B,#04H
0018 A4                MUL     AB
0019 F582              MOV     DPL,A
001B 85F083            MOV     DPH,B
001E 120000      E     LCALL   ?C?CLDOPTR
0021 900000      R     MOV     DPTR,#t
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 297
0025 EF                MOV     A,R7
0026 75F004            MOV     B,#04H
0029 A4                MUL     AB
002A FF                MOV     R7,A
002B E9                MOV     A,R1
002C 2F                ADD     A,R7
002D F9                MOV     R1,A
002E EA                MOV     A,R2
002F 35F0              ADDC    A,B
0031 FA                MOV     R2,A
0032 900001            MOV     DPTR,#01H
0035 120000      E     LCALL   ?C?CLDOPTR
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#state
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FA                MOV     R2,A
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 F9                MOV     R1,A
0042 900000      R     MOV     DPTR,#i
0045 E0                MOVX    A,@DPTR
0046 FE                MOV     R6,A
0047 75F004            MOV     B,#04H
004A A4                MUL     AB
004B F582              MOV     DPL,A
004D 85F083            MOV     DPH,B
0050 120000      E     LCALL   ?C?CLDOPTR
0053 6F                XRL     A,R7
0054 FD                MOV     R5,A
0055 EE                MOV     A,R6
0056 75F004            MOV     B,#04H
0059 A4                MUL     AB
005A FF                MOV     R7,A
005B E9                MOV     A,R1
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 31  

005C 2F                ADD     A,R7
005D F9                MOV     R1,A
005E EA                MOV     A,R2
005F 35F0              ADDC    A,B
0061 FA                MOV     R2,A
0062 900002            MOV     DPTR,#02H
0065 120000      E     LCALL   ?C?CLDOPTR
0068 6D                XRL     A,R5
0069 FF                MOV     R7,A
006A 900003            MOV     DPTR,#03H
006D 120000      E     LCALL   ?C?CLDOPTR
0070 6F                XRL     A,R7
0071 900000      R     MOV     DPTR,#Tmp
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 298
0075 900001            MOV     DPTR,#01H
0078 120000      E     LCALL   ?C?CLDOPTR
007B FF                MOV     R7,A
007C 900000      R     MOV     DPTR,#state
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FA                MOV     R2,A
0082 A3                INC     DPTR
0083 E0                MOVX    A,@DPTR
0084 F9                MOV     R1,A
0085 900000      R     MOV     DPTR,#i
0088 E0                MOVX    A,@DPTR
0089 75F004            MOV     B,#04H
008C A4                MUL     AB
008D F582              MOV     DPL,A
008F 85F083            MOV     DPH,B
0092 120000      E     LCALL   ?C?CLDOPTR
0095 6F                XRL     A,R7
0096 FF                MOV     R7,A
0097 900000      R     MOV     DPTR,#Tm
009A F0                MOVX    @DPTR,A
009B 120000      R     LCALL   _xtime
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
00A0 900000      R     MOV     DPTR,#state
00A3 E0                MOVX    A,@DPTR
00A4 FB                MOV     R3,A
00A5 A3                INC     DPTR
00A6 E0                MOVX    A,@DPTR
00A7 FA                MOV     R2,A
00A8 A3                INC     DPTR
00A9 E0                MOVX    A,@DPTR
00AA F9                MOV     R1,A
00AB 900000      R     MOV     DPTR,#i
00AE E0                MOVX    A,@DPTR
00AF FE                MOV     R6,A
00B0 75F004            MOV     B,#04H
00B3 A4                MUL     AB
00B4 F582              MOV     DPL,A
00B6 E9                MOV     A,R1
00B7 2582              ADD     A,DPL
00B9 F9                MOV     R1,A
00BA EA                MOV     A,R2
00BB 35F0              ADDC    A,B
00BD FA                MOV     R2,A
00BE 120000      E     LCALL   ?C?CLDPTR
00C1 FD                MOV     R5,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 32  

00C2 900000      R     MOV     DPTR,#Tmp
00C5 E0                MOVX    A,@DPTR
00C6 6F                XRL     A,R7
00C7 6D                XRL     A,R5
00C8 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 299
00CB EE                MOV     A,R6
00CC 75F004            MOV     B,#04H
00CF A4                MUL     AB
00D0 FF                MOV     R7,A
00D1 900000      R     MOV     DPTR,#state
00D4 E0                MOVX    A,@DPTR
00D5 FB                MOV     R3,A
00D6 A3                INC     DPTR
00D7 E0                MOVX    A,@DPTR
00D8 FA                MOV     R2,A
00D9 A3                INC     DPTR
00DA E0                MOVX    A,@DPTR
00DB 2F                ADD     A,R7
00DC F9                MOV     R1,A
00DD EA                MOV     A,R2
00DE 35F0              ADDC    A,B
00E0 FA                MOV     R2,A
00E1 900002            MOV     DPTR,#02H
00E4 120000      E     LCALL   ?C?CLDOPTR
00E7 FF                MOV     R7,A
00E8 900001            MOV     DPTR,#01H
00EB 120000      E     LCALL   ?C?CLDOPTR
00EE 6F                XRL     A,R7
00EF FF                MOV     R7,A
00F0 900000      R     MOV     DPTR,#Tm
00F3 F0                MOVX    @DPTR,A
00F4 120000      R     LCALL   _xtime
00F7 EF                MOV     A,R7
00F8 F0                MOVX    @DPTR,A
00F9 900000      R     MOV     DPTR,#i
00FC E0                MOVX    A,@DPTR
00FD 75F004            MOV     B,#04H
0100 A4                MUL     AB
0101 FF                MOV     R7,A
0102 900000      R     MOV     DPTR,#state
0105 E0                MOVX    A,@DPTR
0106 FB                MOV     R3,A
0107 A3                INC     DPTR
0108 E0                MOVX    A,@DPTR
0109 FA                MOV     R2,A
010A A3                INC     DPTR
010B E0                MOVX    A,@DPTR
010C 2F                ADD     A,R7
010D F9                MOV     R1,A
010E EA                MOV     A,R2
010F 35F0              ADDC    A,B
0111 FA                MOV     R2,A
0112 E9                MOV     A,R1
0113 2401              ADD     A,#01H
0115 F9                MOV     R1,A
0116 E4                CLR     A
0117 3A                ADDC    A,R2
0118 FA                MOV     R2,A
0119 120000      E     LCALL   ?C?CLDPTR
011C FF                MOV     R7,A
011D 900000      R     MOV     DPTR,#Tmp
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 33  

0120 E0                MOVX    A,@DPTR
0121 FE                MOV     R6,A
0122 A3                INC     DPTR
0123 E0                MOVX    A,@DPTR
0124 6E                XRL     A,R6
0125 6F                XRL     A,R7
0126 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 300
0129 900000      R     MOV     DPTR,#i
012C E0                MOVX    A,@DPTR
012D 75F004            MOV     B,#04H
0130 A4                MUL     AB
0131 FF                MOV     R7,A
0132 900000      R     MOV     DPTR,#state
0135 E0                MOVX    A,@DPTR
0136 FB                MOV     R3,A
0137 A3                INC     DPTR
0138 E0                MOVX    A,@DPTR
0139 FA                MOV     R2,A
013A A3                INC     DPTR
013B E0                MOVX    A,@DPTR
013C 2F                ADD     A,R7
013D F9                MOV     R1,A
013E EA                MOV     A,R2
013F 35F0              ADDC    A,B
0141 FA                MOV     R2,A
0142 900003            MOV     DPTR,#03H
0145 120000      E     LCALL   ?C?CLDOPTR
0148 FF                MOV     R7,A
0149 900002            MOV     DPTR,#02H
014C 120000      E     LCALL   ?C?CLDOPTR
014F 6F                XRL     A,R7
0150 FF                MOV     R7,A
0151 900000      R     MOV     DPTR,#Tm
0154 F0                MOVX    @DPTR,A
0155 120000      R     LCALL   _xtime
0158 EF                MOV     A,R7
0159 F0                MOVX    @DPTR,A
015A 900000      R     MOV     DPTR,#i
015D E0                MOVX    A,@DPTR
015E 75F004            MOV     B,#04H
0161 A4                MUL     AB
0162 FF                MOV     R7,A
0163 900000      R     MOV     DPTR,#state
0166 E0                MOVX    A,@DPTR
0167 FB                MOV     R3,A
0168 A3                INC     DPTR
0169 E0                MOVX    A,@DPTR
016A FA                MOV     R2,A
016B A3                INC     DPTR
016C E0                MOVX    A,@DPTR
016D 2F                ADD     A,R7
016E F9                MOV     R1,A
016F EA                MOV     A,R2
0170 35F0              ADDC    A,B
0172 FA                MOV     R2,A
0173 E9                MOV     A,R1
0174 2402              ADD     A,#02H
0176 F9                MOV     R1,A
0177 E4                CLR     A
0178 3A                ADDC    A,R2
0179 FA                MOV     R2,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 34  

017A 120000      E     LCALL   ?C?CLDPTR
017D FF                MOV     R7,A
017E 900000      R     MOV     DPTR,#Tmp
0181 E0                MOVX    A,@DPTR
0182 FE                MOV     R6,A
0183 A3                INC     DPTR
0184 E0                MOVX    A,@DPTR
0185 6E                XRL     A,R6
0186 6F                XRL     A,R7
0187 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 301
018A 900000      R     MOV     DPTR,#i
018D E0                MOVX    A,@DPTR
018E 75F004            MOV     B,#04H
0191 A4                MUL     AB
0192 FF                MOV     R7,A
0193 900000      R     MOV     DPTR,#state
0196 E0                MOVX    A,@DPTR
0197 FB                MOV     R3,A
0198 A3                INC     DPTR
0199 E0                MOVX    A,@DPTR
019A FA                MOV     R2,A
019B A3                INC     DPTR
019C E0                MOVX    A,@DPTR
019D 2F                ADD     A,R7
019E F9                MOV     R1,A
019F EA                MOV     A,R2
01A0 35F0              ADDC    A,B
01A2 FA                MOV     R2,A
01A3 900003            MOV     DPTR,#03H
01A6 120000      E     LCALL   ?C?CLDOPTR
01A9 FF                MOV     R7,A
01AA 900000      R     MOV     DPTR,#t
01AD E0                MOVX    A,@DPTR
01AE 6F                XRL     A,R7
01AF FF                MOV     R7,A
01B0 900000      R     MOV     DPTR,#Tm
01B3 F0                MOVX    @DPTR,A
01B4 120000      R     LCALL   _xtime
01B7 EF                MOV     A,R7
01B8 F0                MOVX    @DPTR,A
01B9 900000      R     MOV     DPTR,#i
01BC E0                MOVX    A,@DPTR
01BD 75F004            MOV     B,#04H
01C0 A4                MUL     AB
01C1 FF                MOV     R7,A
01C2 900000      R     MOV     DPTR,#state
01C5 E0                MOVX    A,@DPTR
01C6 FB                MOV     R3,A
01C7 A3                INC     DPTR
01C8 E0                MOVX    A,@DPTR
01C9 FA                MOV     R2,A
01CA A3                INC     DPTR
01CB E0                MOVX    A,@DPTR
01CC 2F                ADD     A,R7
01CD F9                MOV     R1,A
01CE EA                MOV     A,R2
01CF 35F0              ADDC    A,B
01D1 FA                MOV     R2,A
01D2 E9                MOV     A,R1
01D3 2403              ADD     A,#03H
01D5 F9                MOV     R1,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 35  

01D6 E4                CLR     A
01D7 3A                ADDC    A,R2
01D8 FA                MOV     R2,A
01D9 120000      E     LCALL   ?C?CLDPTR
01DC FF                MOV     R7,A
01DD 900000      R     MOV     DPTR,#Tmp
01E0 E0                MOVX    A,@DPTR
01E1 FE                MOV     R6,A
01E2 A3                INC     DPTR
01E3 E0                MOVX    A,@DPTR
01E4 6E                XRL     A,R6
01E5 6F                XRL     A,R7
01E6 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 302
01E9 900000      R     MOV     DPTR,#i
01EC E0                MOVX    A,@DPTR
01ED 04                INC     A
01EE F0                MOVX    @DPTR,A
01EF E0                MOVX    A,@DPTR
01F0 C3                CLR     C
01F1 9404              SUBB    A,#04H
01F3 5003              JNC     $ + 5H
01F5 020000      R     LJMP    ?C0032
                                           ; SOURCE LINE # 303
01F8         ?C0035:
01F8 22                RET     
             ; FUNCTION MixColumns (END)

             ; FUNCTION InvMixColumns (BEGIN)
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 332
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
0007         ?C0036:
0007 900000      R     MOV     DPTR,#i
000A E0                MOVX    A,@DPTR
000B FE                MOV     R6,A
000C A3                INC     DPTR
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F C3                CLR     C
0010 9404              SUBB    A,#04H
0012 EE                MOV     A,R6
0013 6480              XRL     A,#080H
0015 9480              SUBB    A,#080H
0017 4003              JC      $ + 5H
0019 020000      R     LJMP    ?C0039
                                           ; SOURCE LINE # 333
                                           ; SOURCE LINE # 334
001C EF                MOV     A,R7
001D 7802              MOV     R0,#02H
001F         ?C0080:
001F C3                CLR     C
0020 33                RLC     A
0021 CE                XCH     A,R6
0022 33                RLC     A
0023 CE                XCH     A,R6
0024 D8F9              DJNZ    R0,?C0080
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 36  

0026 FF                MOV     R7,A
0027 900000      R     MOV     DPTR,#state
002A E0                MOVX    A,@DPTR
002B FB                MOV     R3,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E FA                MOV     R2,A
002F A3                INC     DPTR
0030 E0                MOVX    A,@DPTR
0031 F9                MOV     R1,A
0032 8F82              MOV     DPL,R7
0034 8E83              MOV     DPH,R6
0036 120000      E     LCALL   ?C?CLDOPTR
0039 900000      R     MOV     DPTR,#a
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
003D E9                MOV     A,R1
003E 2F                ADD     A,R7
003F F9                MOV     R1,A
0040 EA                MOV     A,R2
0041 3E                ADDC    A,R6
0042 FA                MOV     R2,A
0043 900001            MOV     DPTR,#01H
0046 120000      E     LCALL   ?C?CLDOPTR
0049 900000      R     MOV     DPTR,#b
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
004D 900002            MOV     DPTR,#02H
0050 120000      E     LCALL   ?C?CLDOPTR
0053 900000      R     MOV     DPTR,#c
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 337
0057 900003            MOV     DPTR,#03H
005A 120000      E     LCALL   ?C?CLDOPTR
005D 900000      R     MOV     DPTR,#d
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 339
0061 900000      R     MOV     DPTR,#a
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 120000      R     LCALL   _xtime
0069 120000      R     LCALL   _xtime
006C AD07              MOV     R5,AR7
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 120000      R     LCALL   _xtime
0073 EF                MOV     A,R7
0074 6D                XRL     A,R5
0075 120000      R     LCALL   L?0090
0078 EF                MOV     A,R7
0079 6D                XRL     A,R5
007A A3                INC     DPTR
007B 120000      R     LCALL   L?0086
007E AC07              MOV     R4,AR7
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
0082 120000      R     LCALL   _xtime
0085 120000      R     LCALL   L?0087
0088 E0                MOVX    A,@DPTR
0089 6F                XRL     A,R7
008A 6D                XRL     A,R5
008B FD                MOV     R5,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 37  

008C 900000      R     MOV     DPTR,#i
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 A3                INC     DPTR
0092 E0                MOVX    A,@DPTR
0093 7802              MOV     R0,#02H
0095         ?C0081:
0095 C3                CLR     C
0096 33                RLC     A
0097 CE                XCH     A,R6
0098 33                RLC     A
0099 CE                XCH     A,R6
009A D8F9              DJNZ    R0,?C0081
009C FF                MOV     R7,A
009D 900000      R     MOV     DPTR,#state
00A0 E0                MOVX    A,@DPTR
00A1 FB                MOV     R3,A
00A2 A3                INC     DPTR
00A3 E0                MOVX    A,@DPTR
00A4 FA                MOV     R2,A
00A5 A3                INC     DPTR
00A6 E0                MOVX    A,@DPTR
00A7 F9                MOV     R1,A
00A8 8F82              MOV     DPL,R7
00AA 8E83              MOV     DPH,R6
00AC ED                MOV     A,R5
00AD 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 340
00B0 900000      R     MOV     DPTR,#b
00B3 E0                MOVX    A,@DPTR
00B4 FF                MOV     R7,A
00B5 120000      R     LCALL   _xtime
00B8 120000      R     LCALL   _xtime
00BB AD07              MOV     R5,AR7
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF 120000      R     LCALL   _xtime
00C2 EF                MOV     A,R7
00C3 6D                XRL     A,R5
00C4 120000      R     LCALL   L?0090
00C7 EF                MOV     A,R7
00C8 6D                XRL     A,R5
00C9 900000      R     MOV     DPTR,#a
00CC 120000      R     LCALL   L?0090
00CF E0                MOVX    A,@DPTR
00D0 6F                XRL     A,R7
00D1 6D                XRL     A,R5
00D2 900000      R     MOV     DPTR,#c
00D5 120000      R     LCALL   L?0086
00D8 AC07              MOV     R4,AR7
00DA E0                MOVX    A,@DPTR
00DB FF                MOV     R7,A
00DC 120000      R     LCALL   _xtime
00DF 120000      R     LCALL   _xtime
00E2 E0                MOVX    A,@DPTR
00E3 6F                XRL     A,R7
00E4 6C                XRL     A,R4
00E5 6D                XRL     A,R5
00E6 FD                MOV     R5,A
00E7 900000      R     MOV     DPTR,#i
00EA E0                MOVX    A,@DPTR
00EB FE                MOV     R6,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 38  

00EC A3                INC     DPTR
00ED E0                MOVX    A,@DPTR
00EE 7802              MOV     R0,#02H
00F0         ?C0082:
00F0 C3                CLR     C
00F1 33                RLC     A
00F2 CE                XCH     A,R6
00F3 33                RLC     A
00F4 CE                XCH     A,R6
00F5 D8F9              DJNZ    R0,?C0082
00F7 FF                MOV     R7,A
00F8 900000      R     MOV     DPTR,#state
00FB E0                MOVX    A,@DPTR
00FC FB                MOV     R3,A
00FD A3                INC     DPTR
00FE E0                MOVX    A,@DPTR
00FF FA                MOV     R2,A
0100 A3                INC     DPTR
0101 E0                MOVX    A,@DPTR
0102 2F                ADD     A,R7
0103 F9                MOV     R1,A
0104 EA                MOV     A,R2
0105 3E                ADDC    A,R6
0106 FA                MOV     R2,A
0107 900001            MOV     DPTR,#01H
010A ED                MOV     A,R5
010B 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 341
010E 900000      R     MOV     DPTR,#a
0111 120000      R     LCALL   L?0091
0114 AD07              MOV     R5,AR7
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 120000      R     LCALL   _xtime
011B 120000      R     LCALL   _xtime
011E E0                MOVX    A,@DPTR
011F 6F                XRL     A,R7
0120 120000      R     LCALL   L?0089
0123 E0                MOVX    A,@DPTR
0124 6F                XRL     A,R7
0125 6D                XRL     A,R5
0126 FD                MOV     R5,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A 120000      R     LCALL   _xtime
012D 120000      R     LCALL   _xtime
0130 AC07              MOV     R4,AR7
0132 E0                MOVX    A,@DPTR
0133 FF                MOV     R7,A
0134 120000      R     LCALL   _xtime
0137 EF                MOV     A,R7
0138 6C                XRL     A,R4
0139 FC                MOV     R4,A
013A 120000      R     LCALL   L?0091
013D EF                MOV     A,R7
013E 120000      R     LCALL   L?0088
0141 AC07              MOV     R4,AR7
0143 E0                MOVX    A,@DPTR
0144 FF                MOV     R7,A
0145 120000      R     LCALL   _xtime
0148 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 39  

0149 6F                XRL     A,R7
014A 6C                XRL     A,R4
014B 6D                XRL     A,R5
014C FD                MOV     R5,A
014D 900000      R     MOV     DPTR,#i
0150 E0                MOVX    A,@DPTR
0151 FE                MOV     R6,A
0152 A3                INC     DPTR
0153 E0                MOVX    A,@DPTR
0154 7802              MOV     R0,#02H
0156         ?C0083:
0156 C3                CLR     C
0157 33                RLC     A
0158 CE                XCH     A,R6
0159 33                RLC     A
015A CE                XCH     A,R6
015B D8F9              DJNZ    R0,?C0083
015D FF                MOV     R7,A
015E 900000      R     MOV     DPTR,#state
0161 E0                MOVX    A,@DPTR
0162 FB                MOV     R3,A
0163 A3                INC     DPTR
0164 E0                MOVX    A,@DPTR
0165 FA                MOV     R2,A
0166 A3                INC     DPTR
0167 E0                MOVX    A,@DPTR
0168 2F                ADD     A,R7
0169 F9                MOV     R1,A
016A EA                MOV     A,R2
016B 3E                ADDC    A,R6
016C FA                MOV     R2,A
016D 900002            MOV     DPTR,#02H
0170 ED                MOV     A,R5
0171 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 342
0174 900000      R     MOV     DPTR,#b
0177 120000      R     LCALL   L?0091
017A AD07              MOV     R5,AR7
017C E0                MOVX    A,@DPTR
017D FF                MOV     R7,A
017E 120000      R     LCALL   _xtime
0181 120000      R     LCALL   _xtime
0184 E0                MOVX    A,@DPTR
0185 6F                XRL     A,R7
0186 6D                XRL     A,R5
0187 FD                MOV     R5,A
0188 900000      R     MOV     DPTR,#a
018B 120000      R     LCALL   L?0091
018E AC07              MOV     R4,AR7
0190 E0                MOVX    A,@DPTR
0191 FF                MOV     R7,A
0192 120000      R     LCALL   _xtime
0195 E0                MOVX    A,@DPTR
0196 6F                XRL     A,R7
0197 6C                XRL     A,R4
0198 6D                XRL     A,R5
0199 FD                MOV     R5,A
019A 900000      R     MOV     DPTR,#c
019D 120000      R     LCALL   L?0091
01A0 E0                MOVX    A,@DPTR
01A1 6F                XRL     A,R7
01A2 6D                XRL     A,R5
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 40  

01A3 FD                MOV     R5,A
01A4 A3                INC     DPTR
01A5 E0                MOVX    A,@DPTR
01A6 FF                MOV     R7,A
01A7 120000      R     LCALL   _xtime
01AA 120000      R     LCALL   _xtime
01AD AC07              MOV     R4,AR7
01AF E0                MOVX    A,@DPTR
01B0 FF                MOV     R7,A
01B1 120000      R     LCALL   _xtime
01B4 EF                MOV     A,R7
01B5 6C                XRL     A,R4
01B6 FC                MOV     R4,A
01B7 120000      R     LCALL   L?0091
01BA EF                MOV     A,R7
01BB 6C                XRL     A,R4
01BC 6D                XRL     A,R5
01BD FD                MOV     R5,A
01BE 900000      R     MOV     DPTR,#i
01C1 E0                MOVX    A,@DPTR
01C2 FE                MOV     R6,A
01C3 A3                INC     DPTR
01C4 E0                MOVX    A,@DPTR
01C5 7802              MOV     R0,#02H
01C7         ?C0084:
01C7 C3                CLR     C
01C8 33                RLC     A
01C9 CE                XCH     A,R6
01CA 33                RLC     A
01CB CE                XCH     A,R6
01CC D8F9              DJNZ    R0,?C0084
01CE FF                MOV     R7,A
01CF 900000      R     MOV     DPTR,#state
01D2 E0                MOVX    A,@DPTR
01D3 FB                MOV     R3,A
01D4 A3                INC     DPTR
01D5 E0                MOVX    A,@DPTR
01D6 FA                MOV     R2,A
01D7 A3                INC     DPTR
01D8 E0                MOVX    A,@DPTR
01D9 2F                ADD     A,R7
01DA F9                MOV     R1,A
01DB EA                MOV     A,R2
01DC 3E                ADDC    A,R6
01DD FA                MOV     R2,A
01DE 900003            MOV     DPTR,#03H
01E1 ED                MOV     A,R5
01E2 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 343
01E5 900000      R     MOV     DPTR,#i+01H
01E8 E0                MOVX    A,@DPTR
01E9 04                INC     A
01EA F0                MOVX    @DPTR,A
01EB 6003              JZ      $ + 5H
01ED 020000      R     LJMP    ?C0036
01F0 900000      R     MOV     DPTR,#i
01F3 E0                MOVX    A,@DPTR
01F4 04                INC     A
01F5 F0                MOVX    @DPTR,A
01F6         ?C0085:
01F6 020000      R     LJMP    ?C0036
                                           ; SOURCE LINE # 344
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 41  

01F9         ?C0039:
01F9 22                RET     
             ; FUNCTION InvMixColumns (END)

             ; FUNCTION InvSubBytes (BEGIN)
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 352
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005         ?C0040:
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
0005 E4                CLR     A
0006 900000      R     MOV     DPTR,#j
0009 F0                MOVX    @DPTR,A
000A         ?C0043:
000A 900000      R     MOV     DPTR,#j
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F C3                CLR     C
0010 9404              SUBB    A,#04H
0012 505A              JNC     ?C0042
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 356
0014 EF                MOV     A,R7
0015 75F004            MOV     B,#04H
0018 A4                MUL     AB
0019 FF                MOV     R7,A
001A 900000      R     MOV     DPTR,#state
001D E0                MOVX    A,@DPTR
001E FB                MOV     R3,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FA                MOV     R2,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 2F                ADD     A,R7
0025 F9                MOV     R1,A
0026 EA                MOV     A,R2
0027 35F0              ADDC    A,B
0029 FA                MOV     R2,A
002A 900000      R     MOV     DPTR,#i
002D E0                MOVX    A,@DPTR
002E 7E00              MOV     R6,#00H
0030 29                ADD     A,R1
0031 F9                MOV     R1,A
0032 EE                MOV     A,R6
0033 3A                ADDC    A,R2
0034 FA                MOV     R2,A
0035 120000      E     LCALL   ?C?CLDPTR
0038 FF                MOV     R7,A
0039 120000      R     LCALL   _getSBoxInvert
003C AD07              MOV     R5,AR7
003E 900000      R     MOV     DPTR,#j
0041 E0                MOVX    A,@DPTR
0042 75F004            MOV     B,#04H
0045 A4                MUL     AB
0046 FF                MOV     R7,A
0047 900000      R     MOV     DPTR,#state
004A E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 42  

004B FB                MOV     R3,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E FA                MOV     R2,A
004F A3                INC     DPTR
0050 E0                MOVX    A,@DPTR
0051 2F                ADD     A,R7
0052 F9                MOV     R1,A
0053 EA                MOV     A,R2
0054 35F0              ADDC    A,B
0056 FA                MOV     R2,A
0057 900000      R     MOV     DPTR,#i
005A E0                MOVX    A,@DPTR
005B 7E00              MOV     R6,#00H
005D 29                ADD     A,R1
005E F9                MOV     R1,A
005F EE                MOV     A,R6
0060 3A                ADDC    A,R2
0061 FA                MOV     R2,A
0062 ED                MOV     A,R5
0063 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 357
0066 900000      R     MOV     DPTR,#j
0069 E0                MOVX    A,@DPTR
006A 04                INC     A
006B F0                MOVX    @DPTR,A
006C 809C              SJMP    ?C0043
                                           ; SOURCE LINE # 358
006E         ?C0042:
006E 900000      R     MOV     DPTR,#i
0071 E0                MOVX    A,@DPTR
0072 04                INC     A
0073 F0                MOVX    @DPTR,A
0074 E0                MOVX    A,@DPTR
0075 C3                CLR     C
0076 9404              SUBB    A,#04H
0078 408B              JC      ?C0040
                                           ; SOURCE LINE # 359
007A         ?C0046:
007A 22                RET     
             ; FUNCTION InvSubBytes (END)

             ; FUNCTION InvShiftRows (BEGIN)
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 362
                                           ; SOURCE LINE # 366
0000 900000      R     MOV     DPTR,#state
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FA                MOV     R2,A
0008 A3                INC     DPTR
0009 E0                MOVX    A,@DPTR
000A F9                MOV     R1,A
000B 90000D            MOV     DPTR,#0DH
000E 120000      E     LCALL   ?C?CLDOPTR
0011 FF                MOV     R7,A
;---- Variable 'temp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 367
0012 900009            MOV     DPTR,#09H
0015 120000      E     LCALL   ?C?CLDOPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 43  

0018 90000D            MOV     DPTR,#0DH
001B 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 368
001E 900005            MOV     DPTR,#05H
0021 120000      E     LCALL   ?C?CLDOPTR
0024 900009            MOV     DPTR,#09H
0027 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 369
002A 900001            MOV     DPTR,#01H
002D 120000      E     LCALL   ?C?CLDOPTR
0030 900005            MOV     DPTR,#05H
0033 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 370
0036 900001            MOV     DPTR,#01H
0039 EF                MOV     A,R7
003A 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 373
003D 900002            MOV     DPTR,#02H
0040 120000      E     LCALL   ?C?CLDOPTR
0043 FF                MOV     R7,A
                                           ; SOURCE LINE # 374
0044 90000A            MOV     DPTR,#0AH
0047 120000      E     LCALL   ?C?CLDOPTR
004A 900002            MOV     DPTR,#02H
004D 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 375
0050 90000A            MOV     DPTR,#0AH
0053 EF                MOV     A,R7
0054 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 377
0057 900006            MOV     DPTR,#06H
005A 120000      E     LCALL   ?C?CLDOPTR
005D FF                MOV     R7,A
                                           ; SOURCE LINE # 378
005E 90000E            MOV     DPTR,#0EH
0061 120000      E     LCALL   ?C?CLDOPTR
0064 900006            MOV     DPTR,#06H
0067 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 379
006A 90000E            MOV     DPTR,#0EH
006D EF                MOV     A,R7
006E 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 382
0071 900003            MOV     DPTR,#03H
0074 120000      E     LCALL   ?C?CLDOPTR
0077 FF                MOV     R7,A
                                           ; SOURCE LINE # 383
0078 900007            MOV     DPTR,#07H
007B 120000      E     LCALL   ?C?CLDOPTR
007E 900003            MOV     DPTR,#03H
0081 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 384
0084 90000B            MOV     DPTR,#0BH
0087 120000      E     LCALL   ?C?CLDOPTR
008A 900007            MOV     DPTR,#07H
008D 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 385
0090 90000F            MOV     DPTR,#0FH
0093 120000      E     LCALL   ?C?CLDOPTR
0096 90000B            MOV     DPTR,#0BH
0099 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 386
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 44  

009C 90000F            MOV     DPTR,#0FH
009F EF                MOV     A,R7
00A0 020000      E     LJMP    ?C?CSTOPTR
             ; FUNCTION InvShiftRows (END)

             ; FUNCTION L?0097 (BEGIN)
0000 900000      R     MOV     DPTR,#output
0003 E0                MOVX    A,@DPTR
0004 F9                MOV     R1,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FA                MOV     R2,A
0008 A3                INC     DPTR
0009 E0                MOVX    A,@DPTR
000A 900000      R     MOV     DPTR,#state
000D C9                XCH     A,R1
000E F0                MOVX    @DPTR,A
000F A3                INC     DPTR
0010 EA                MOV     A,R2
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 E9                MOV     A,R1
0014 F0                MOVX    @DPTR,A
             ; FUNCTION Cipher (BEGIN)
                                           ; SOURCE LINE # 391
                                           ; SOURCE LINE # 392
                                           ; SOURCE LINE # 393
0015 E4                CLR     A
0016 900000      R     MOV     DPTR,#round
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 396
001A FF                MOV     R7,A
001B 120000      R     LCALL   _AddRoundKey
                                           ; SOURCE LINE # 401
001E 900000      R     MOV     DPTR,#round
0021 7401              MOV     A,#01H
0023 F0                MOVX    @DPTR,A
0024         ?C0048:
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 403
0024 120000      R     LCALL   SubBytes
                                           ; SOURCE LINE # 404
0027 120000      R     LCALL   ShiftRows
                                           ; SOURCE LINE # 405
002A 120000      R     LCALL   MixColumns
                                           ; SOURCE LINE # 406
002D 900000      R     MOV     DPTR,#round
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 120000      R     LCALL   _AddRoundKey
                                           ; SOURCE LINE # 407
0035 900000      R     MOV     DPTR,#round
0038 E0                MOVX    A,@DPTR
0039 04                INC     A
003A F0                MOVX    @DPTR,A
003B E0                MOVX    A,@DPTR
003C C3                CLR     C
003D 940A              SUBB    A,#0AH
003F 40E3              JC      ?C0048
0041         ?C0049:
                                           ; SOURCE LINE # 411
0041 120000      R     LCALL   SubBytes
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 45  

                                           ; SOURCE LINE # 412
0044 120000      R     LCALL   ShiftRows
                                           ; SOURCE LINE # 413
0047 7F0A              MOV     R7,#0AH
0049 020000      R     LJMP    _AddRoundKey
             ; FUNCTION Cipher (END)

             ; FUNCTION L?0098 (BEGIN)
0000 900000      R     MOV     DPTR,#output
0003 E0                MOVX    A,@DPTR
0004 F9                MOV     R1,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FA                MOV     R2,A
0008 A3                INC     DPTR
0009 E0                MOVX    A,@DPTR
000A 900000      R     MOV     DPTR,#state
000D C9                XCH     A,R1
000E F0                MOVX    @DPTR,A
000F A3                INC     DPTR
0010 EA                MOV     A,R2
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 E9                MOV     A,R1
0014 F0                MOVX    @DPTR,A
             ; FUNCTION InvCipher (BEGIN)
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
                                           ; SOURCE LINE # 418
0015 E4                CLR     A
0016 900000      R     MOV     DPTR,#round
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 421
001A 7F0A              MOV     R7,#0AH
001C 120000      R     LCALL   _AddRoundKey
                                           ; SOURCE LINE # 426
001F 900000      R     MOV     DPTR,#round
0022 7409              MOV     A,#09H
0024 F0                MOVX    @DPTR,A
0025         ?C0052:
                                           ; SOURCE LINE # 427
                                           ; SOURCE LINE # 428
0025 120000      R     LCALL   InvShiftRows
                                           ; SOURCE LINE # 429
0028 120000      R     LCALL   InvSubBytes
                                           ; SOURCE LINE # 430
002B 900000      R     MOV     DPTR,#round
002E E0                MOVX    A,@DPTR
002F FF                MOV     R7,A
0030 120000      R     LCALL   _AddRoundKey
                                           ; SOURCE LINE # 431
0033 120000      R     LCALL   InvMixColumns
                                           ; SOURCE LINE # 432
0036 900000      R     MOV     DPTR,#round
0039 E0                MOVX    A,@DPTR
003A 14                DEC     A
003B F0                MOVX    @DPTR,A
003C E0                MOVX    A,@DPTR
003D D3                SETB    C
003E 9400              SUBB    A,#00H
0040 50E3              JNC     ?C0052
0042         ?C0053:
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 46  

                                           ; SOURCE LINE # 436
0042 120000      R     LCALL   InvShiftRows
                                           ; SOURCE LINE # 437
0045 120000      R     LCALL   InvSubBytes
                                           ; SOURCE LINE # 438
0048 E4                CLR     A
0049 FF                MOV     R7,A
004A 020000      R     LJMP    _AddRoundKey
             ; FUNCTION InvCipher (END)

             ; FUNCTION L?0092 (BEGIN)
0000 900000      R     MOV     DPTR,#input
0003 E0                MOVX    A,@DPTR
0004 F9                MOV     R1,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FA                MOV     R2,A
0008 A3                INC     DPTR
0009 E0                MOVX    A,@DPTR
000A 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
000D C9                XCH     A,R1
000E F0                MOVX    @DPTR,A
000F A3                INC     DPTR
0010 EA                MOV     A,R2
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 E9                MOV     A,R1
0014 F0                MOVX    @DPTR,A
0015 900000      R     MOV     DPTR,#output
0018         L?0093:
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C FA                MOV     R2,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F F9                MOV     R1,A
             ; FUNCTION _BlockCopy (BEGIN)
                                           ; SOURCE LINE # 441
0020 900000      R     MOV     DPTR,#output
0023 EB                MOV     A,R3
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 EA                MOV     A,R2
0027 F0                MOVX    @DPTR,A
0028 A3                INC     DPTR
0029 E9                MOV     A,R1
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 442
                                           ; SOURCE LINE # 444
;---- Variable 'i' assigned to Register 'R7' ----
002B E4                CLR     A
002C FF                MOV     R7,A
002D         ?C0056:
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
002D 900000      R     MOV     DPTR,#input
0030 E0                MOVX    A,@DPTR
0031 FB                MOV     R3,A
0032 A3                INC     DPTR
0033 E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 47  

0034 FA                MOV     R2,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 F9                MOV     R1,A
0038 8F82              MOV     DPL,R7
003A 758300            MOV     DPH,#00H
003D 120000      E     LCALL   ?C?CLDOPTR
0040 FE                MOV     R6,A
0041 900000      R     MOV     DPTR,#output
0044 E0                MOVX    A,@DPTR
0045 FB                MOV     R3,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FA                MOV     R2,A
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B F9                MOV     R1,A
004C 8F82              MOV     DPL,R7
004E 758300            MOV     DPH,#00H
0051 EE                MOV     A,R6
0052 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 447
0055 0F                INC     R7
0056 EF                MOV     A,R7
0057 B410D3            CJNE    A,#010H,?C0056
                                           ; SOURCE LINE # 448
005A         ?C0059:
005A 22                RET     
             ; FUNCTION _BlockCopy (END)

             ; FUNCTION _AES128_ECB_encrypt (BEGIN)
                                           ; SOURCE LINE # 458
0000 900000      R     MOV     DPTR,#input
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 459
                                           ; SOURCE LINE # 461
000B 900000      R     MOV     DPTR,#input
000E E0                MOVX    A,@DPTR
000F F9                MOV     R1,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FA                MOV     R2,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
0018 C9                XCH     A,R1
0019 F0                MOVX    @DPTR,A
001A A3                INC     DPTR
001B EA                MOV     A,R2
001C F0                MOVX    @DPTR,A
001D A3                INC     DPTR
001E E9                MOV     A,R1
001F F0                MOVX    @DPTR,A
0020 900000      R     MOV     DPTR,#output
0023 120000      R     LCALL   L?0093
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 48  

                                           ; SOURCE LINE # 462
0026 900000      R     MOV     DPTR,#output
0029 E0                MOVX    A,@DPTR
002A F9                MOV     R1,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 900000      R     MOV     DPTR,#state
0033 C9                XCH     A,R1
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 EA                MOV     A,R2
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 E9                MOV     A,R1
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 464
003B 900000      R     MOV     DPTR,#key
                                           ; SOURCE LINE # 465
003E 120000      R     LCALL   L?0094
                                           ; SOURCE LINE # 468
0041 020000      R     LJMP    Cipher
             ; FUNCTION _AES128_ECB_encrypt (END)

             ; FUNCTION _AES128_ECB_decrypt (BEGIN)
                                           ; SOURCE LINE # 471
0000 900000      R     MOV     DPTR,#input
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 472
                                           ; SOURCE LINE # 474
000B 900000      R     MOV     DPTR,#input
000E E0                MOVX    A,@DPTR
000F F9                MOV     R1,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FA                MOV     R2,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
0018 C9                XCH     A,R1
0019 F0                MOVX    @DPTR,A
001A A3                INC     DPTR
001B EA                MOV     A,R2
001C F0                MOVX    @DPTR,A
001D A3                INC     DPTR
001E E9                MOV     A,R1
001F F0                MOVX    @DPTR,A
0020 900000      R     MOV     DPTR,#output
0023 120000      R     LCALL   L?0093
                                           ; SOURCE LINE # 475
0026 900000      R     MOV     DPTR,#output
0029 E0                MOVX    A,@DPTR
002A F9                MOV     R1,A
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 49  

002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 900000      R     MOV     DPTR,#state
0033 C9                XCH     A,R1
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 EA                MOV     A,R2
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 E9                MOV     A,R1
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 478
003B 900000      R     MOV     DPTR,#key
                                           ; SOURCE LINE # 479
003E 120000      R     LCALL   L?0094
                                           ; SOURCE LINE # 481
0041 020000      R     LJMP    InvCipher
             ; FUNCTION _AES128_ECB_decrypt (END)

             ; FUNCTION L?0101 (BEGIN)
0000 E0                MOVX    A,@DPTR
0001 FB                MOV     R3,A
0002 A3                INC     DPTR
0003 E0                MOVX    A,@DPTR
0004 FA                MOV     R2,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 F9                MOV     R1,A
             ; FUNCTION _XorWithIv (BEGIN)
                                           ; SOURCE LINE # 494
0008 900000      R     MOV     DPTR,#buf
000B EB                MOV     A,R3
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E EA                MOV     A,R2
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 E9                MOV     A,R1
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 497
;---- Variable 'i' assigned to Register 'R7' ----
0013 E4                CLR     A
0014 FF                MOV     R7,A
0015         ?C0062:
                                           ; SOURCE LINE # 498
                                           ; SOURCE LINE # 499
0015 900000      R     MOV     DPTR,#buf
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C FA                MOV     R2,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F 2F                ADD     A,R7
0020 F9                MOV     R1,A
0021 E4                CLR     A
0022 3A                ADDC    A,R2
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 50  

0023 FA                MOV     R2,A
0024 C003              PUSH    AR3
0026 C002              PUSH    AR2
0028 C001              PUSH    AR1
002A 120000      E     LCALL   ?C?CLDPTR
002D FE                MOV     R6,A
002E 900000      R     MOV     DPTR,#Iv
0031 E0                MOVX    A,@DPTR
0032 FB                MOV     R3,A
0033 A3                INC     DPTR
0034 E0                MOVX    A,@DPTR
0035 FA                MOV     R2,A
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
0038 F9                MOV     R1,A
0039 8F82              MOV     DPL,R7
003B 758300            MOV     DPH,#00H
003E 120000      E     LCALL   ?C?CLDOPTR
0041 6E                XRL     A,R6
0042 D001              POP     AR1
0044 D002              POP     AR2
0046 D003              POP     AR3
0048 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 500
004B 0F                INC     R7
004C EF                MOV     A,R7
004D B410C5            CJNE    A,#010H,?C0062
                                           ; SOURCE LINE # 501
0050         ?C0065:
0050 22                RET     
             ; FUNCTION _XorWithIv (END)

             ; FUNCTION _AES128_CBC_encrypt_buffer (BEGIN)
                                           ; SOURCE LINE # 503
0000 900000      R     MOV     DPTR,#output
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 506
000B 900000      R     MOV     DPTR,#length
000E E0                MOVX    A,@DPTR
000F FC                MOV     R4,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FE                MOV     R6,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 540F              ANL     A,#0FH
001A FF                MOV     R7,A
001B 900000      R     MOV     DPTR,#remainders
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 508
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 51  

0020 C002              PUSH    AR2
0022 C001              PUSH    AR1
0024 900000      R     MOV     DPTR,#input
0027 E0                MOVX    A,@DPTR
0028 F9                MOV     R1,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FA                MOV     R2,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
0031 C9                XCH     A,R1
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 EA                MOV     A,R2
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 E9                MOV     A,R1
0038 F0                MOVX    @DPTR,A
0039 D001              POP     AR1
003B D002              POP     AR2
003D 120000      R     LCALL   _BlockCopy
                                           ; SOURCE LINE # 509
0040 900000      R     MOV     DPTR,#output
0043 E0                MOVX    A,@DPTR
0044 F9                MOV     R1,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 FA                MOV     R2,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A 900000      R     MOV     DPTR,#state
004D C9                XCH     A,R1
004E F0                MOVX    @DPTR,A
004F A3                INC     DPTR
0050 EA                MOV     A,R2
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 E9                MOV     A,R1
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 512
0055 900000      R     MOV     DPTR,#key
0058 E0                MOVX    A,@DPTR
0059 FB                MOV     R3,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FA                MOV     R2,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F F9                MOV     R1,A
0060 4A                ORL     A,R2
0061 6004              JZ      ?C0066
                                           ; SOURCE LINE # 513
                                           ; SOURCE LINE # 514
0063 EB                MOV     A,R3
                                           ; SOURCE LINE # 515
0064 120000      R     LCALL   L?0095
                                           ; SOURCE LINE # 516
0067         ?C0066:
                                           ; SOURCE LINE # 518
0067 900000      R     MOV     DPTR,#iv
006A E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 52  

006B FB                MOV     R3,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FA                MOV     R2,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 F9                MOV     R1,A
0072 4A                ORL     A,R2
0073 600B              JZ      ?C0067
                                           ; SOURCE LINE # 519
                                           ; SOURCE LINE # 520
0075 900000      R     MOV     DPTR,#Iv
0078 EB                MOV     A,R3
0079 F0                MOVX    @DPTR,A
007A A3                INC     DPTR
007B EA                MOV     A,R2
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E E9                MOV     A,R1
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
0080         ?C0067:
                                           ; SOURCE LINE # 523
0080 E4                CLR     A
0081 900000      R     MOV     DPTR,#i
0084 F0                MOVX    @DPTR,A
0085 A3                INC     DPTR
0086 F0                MOVX    @DPTR,A
0087         ?C0068:
0087 900000      R     MOV     DPTR,#i
008A E0                MOVX    A,@DPTR
008B FE                MOV     R6,A
008C A3                INC     DPTR
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F E4                CLR     A
0090 FC                MOV     R4,A
0091 FD                MOV     R5,A
0092 900000      R     MOV     DPTR,#length
0095 E0                MOVX    A,@DPTR
0096 F8                MOV     R0,A
0097 A3                INC     DPTR
0098 E0                MOVX    A,@DPTR
0099 F9                MOV     R1,A
009A A3                INC     DPTR
009B E0                MOVX    A,@DPTR
009C FA                MOV     R2,A
009D A3                INC     DPTR
009E E0                MOVX    A,@DPTR
009F FB                MOV     R3,A
00A0 D3                SETB    C
00A1 120000      E     LCALL   ?C?ULCMP
00A4 4046              JC      ?C0069
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 525
00A6 900000      R     MOV     DPTR,#input
00A9 120000      R     LCALL   L?0101
                                           ; SOURCE LINE # 526
00AC 120000      R     LCALL   L?0092
                                           ; SOURCE LINE # 527
                                           ; SOURCE LINE # 528
00AF 120000      R     LCALL   L?0097
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 53  

                                           ; SOURCE LINE # 529
00B2 900000      R     MOV     DPTR,#output
00B5 E0                MOVX    A,@DPTR
00B6 F9                MOV     R1,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FA                MOV     R2,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC 900000      R     MOV     DPTR,#Iv
00BF C9                XCH     A,R1
00C0 F0                MOVX    @DPTR,A
00C1 A3                INC     DPTR
00C2 EA                MOV     A,R2
00C3 F0                MOVX    @DPTR,A
00C4 A3                INC     DPTR
00C5 E9                MOV     A,R1
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 530
00C7 900000      R     MOV     DPTR,#input+01H
00CA E4                CLR     A
00CB 75F010            MOV     B,#010H
00CE 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 531
00D1 900000      R     MOV     DPTR,#output+01H
00D4 E4                CLR     A
00D5 75F010            MOV     B,#010H
00D8 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 532
00DB 900000      R     MOV     DPTR,#i+01H
00DE E0                MOVX    A,@DPTR
00DF 2410              ADD     A,#010H
00E1 F0                MOVX    @DPTR,A
00E2 900000      R     MOV     DPTR,#i
00E5 E0                MOVX    A,@DPTR
00E6 3400              ADDC    A,#00H
00E8 F0                MOVX    @DPTR,A
00E9 020000      R     LJMP    ?C0068
00EC         ?C0069:
                                           ; SOURCE LINE # 534
00EC 900000      R     MOV     DPTR,#remainders
00EF E0                MOVX    A,@DPTR
00F0 6037              JZ      ?C0072
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 536
00F2 120000      R     LCALL   L?0092
                                           ; SOURCE LINE # 537
00F5 900000      R     MOV     DPTR,#remainders
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA FD                MOV     R5,A
00FB C3                CLR     C
00FC 7410              MOV     A,#010H
00FE 9D                SUBB    A,R5
00FF FD                MOV     R5,A
0100 E4                CLR     A
0101 9400              SUBB    A,#00H
0103 FC                MOV     R4,A
0104 C004              PUSH    AR4
0106 C005              PUSH    AR5
0108 900000      R     MOV     DPTR,#output
010B E0                MOVX    A,@DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 54  

010C FB                MOV     R3,A
010D A3                INC     DPTR
010E E0                MOVX    A,@DPTR
010F FA                MOV     R2,A
0110 A3                INC     DPTR
0111 E0                MOVX    A,@DPTR
0112 F9                MOV     R1,A
0113 EF                MOV     A,R7
0114 FD                MOV     R5,A
0115 7C00              MOV     R4,#00H
0117 E9                MOV     A,R1
0118 2D                ADD     A,R5
0119 F9                MOV     R1,A
011A EC                MOV     A,R4
011B 3A                ADDC    A,R2
011C FA                MOV     R2,A
011D 7D00              MOV     R5,#00H
011F D007              POP     AR7
0121 D006              POP     AR6
0123 120000      E     LCALL   ?C?MEMSET
                                           ; SOURCE LINE # 538
                                           ; SOURCE LINE # 539
0126 120000      R     LCALL   L?0097
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 541
0129         ?C0072:
0129 22                RET     
             ; FUNCTION _AES128_CBC_encrypt_buffer (END)

             ; FUNCTION _AES128_CBC_decrypt_buffer (BEGIN)
                                           ; SOURCE LINE # 543
0000 900000      R     MOV     DPTR,#output
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 546
000B 900000      R     MOV     DPTR,#length
000E E0                MOVX    A,@DPTR
000F FC                MOV     R4,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FE                MOV     R6,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 540F              ANL     A,#0FH
001A FF                MOV     R7,A
001B 900000      R     MOV     DPTR,#remainders
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 548
0020 C002              PUSH    AR2
0022 C001              PUSH    AR1
0024 900000      R     MOV     DPTR,#input
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 55  

0027 E0                MOVX    A,@DPTR
0028 F9                MOV     R1,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FA                MOV     R2,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
0031 C9                XCH     A,R1
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 EA                MOV     A,R2
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 E9                MOV     A,R1
0038 F0                MOVX    @DPTR,A
0039 D001              POP     AR1
003B D002              POP     AR2
003D 120000      R     LCALL   _BlockCopy
                                           ; SOURCE LINE # 549
0040 900000      R     MOV     DPTR,#output
0043 E0                MOVX    A,@DPTR
0044 F9                MOV     R1,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 FA                MOV     R2,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A 900000      R     MOV     DPTR,#state
004D C9                XCH     A,R1
004E F0                MOVX    @DPTR,A
004F A3                INC     DPTR
0050 EA                MOV     A,R2
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 E9                MOV     A,R1
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 552
0055 900000      R     MOV     DPTR,#key
0058 E0                MOVX    A,@DPTR
0059 FB                MOV     R3,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FA                MOV     R2,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F F9                MOV     R1,A
0060 4A                ORL     A,R2
0061 6007              JZ      ?C0073
                                           ; SOURCE LINE # 553
                                           ; SOURCE LINE # 554
0063 900000      R     MOV     DPTR,#Key
0066 EB                MOV     A,R3
                                           ; SOURCE LINE # 555
0067 120000      R     LCALL   L?0096
                                           ; SOURCE LINE # 556
006A         ?C0073:
                                           ; SOURCE LINE # 559
006A 900000      R     MOV     DPTR,#iv
006D E0                MOVX    A,@DPTR
006E FB                MOV     R3,A
006F A3                INC     DPTR
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 56  

0070 E0                MOVX    A,@DPTR
0071 FA                MOV     R2,A
0072 A3                INC     DPTR
0073 E0                MOVX    A,@DPTR
0074 F9                MOV     R1,A
0075 4A                ORL     A,R2
0076 600B              JZ      ?C0074
                                           ; SOURCE LINE # 560
                                           ; SOURCE LINE # 561
0078 900000      R     MOV     DPTR,#Iv
007B EB                MOV     A,R3
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E EA                MOV     A,R2
007F F0                MOVX    @DPTR,A
0080 A3                INC     DPTR
0081 E9                MOV     A,R1
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 562
0083         ?C0074:
                                           ; SOURCE LINE # 564
0083 E4                CLR     A
0084 900000      R     MOV     DPTR,#i
0087 F0                MOVX    @DPTR,A
0088 A3                INC     DPTR
0089 F0                MOVX    @DPTR,A
008A         ?C0075:
008A 900000      R     MOV     DPTR,#i
008D E0                MOVX    A,@DPTR
008E FE                MOV     R6,A
008F A3                INC     DPTR
0090 E0                MOVX    A,@DPTR
0091 FF                MOV     R7,A
0092 E4                CLR     A
0093 FC                MOV     R4,A
0094 FD                MOV     R5,A
0095 900000      R     MOV     DPTR,#length
0098 E0                MOVX    A,@DPTR
0099 F8                MOV     R0,A
009A A3                INC     DPTR
009B E0                MOVX    A,@DPTR
009C F9                MOV     R1,A
009D A3                INC     DPTR
009E E0                MOVX    A,@DPTR
009F FA                MOV     R2,A
00A0 A3                INC     DPTR
00A1 E0                MOVX    A,@DPTR
00A2 FB                MOV     R3,A
00A3 D3                SETB    C
00A4 120000      E     LCALL   ?C?ULCMP
00A7 405E              JC      ?C0076
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
00A9 900000      R     MOV     DPTR,#input
00AC E0                MOVX    A,@DPTR
00AD F9                MOV     R1,A
00AE A3                INC     DPTR
00AF E0                MOVX    A,@DPTR
00B0 FA                MOV     R2,A
00B1 A3                INC     DPTR
00B2 E0                MOVX    A,@DPTR
00B3 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 57  

00B6 C9                XCH     A,R1
00B7 F0                MOVX    @DPTR,A
00B8 A3                INC     DPTR
00B9 EA                MOV     A,R2
00BA F0                MOVX    @DPTR,A
00BB A3                INC     DPTR
00BC E9                MOV     A,R1
00BD F0                MOVX    @DPTR,A
00BE 900000      R     MOV     DPTR,#output
00C1 120000      R     LCALL   L?0093
                                           ; SOURCE LINE # 567
                                           ; SOURCE LINE # 568
00C4 120000      R     LCALL   L?0098
                                           ; SOURCE LINE # 569
00C7 900000      R     MOV     DPTR,#output
00CA 120000      R     LCALL   L?0101
                                           ; SOURCE LINE # 570
00CD 900000      R     MOV     DPTR,#input
00D0 E0                MOVX    A,@DPTR
00D1 F9                MOV     R1,A
00D2 A3                INC     DPTR
00D3 E0                MOVX    A,@DPTR
00D4 FA                MOV     R2,A
00D5 A3                INC     DPTR
00D6 E0                MOVX    A,@DPTR
00D7 900000      R     MOV     DPTR,#Iv
00DA C9                XCH     A,R1
00DB F0                MOVX    @DPTR,A
00DC A3                INC     DPTR
00DD EA                MOV     A,R2
00DE F0                MOVX    @DPTR,A
00DF A3                INC     DPTR
00E0 E9                MOV     A,R1
00E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 571
00E2 900000      R     MOV     DPTR,#input+01H
00E5 E4                CLR     A
00E6 75F010            MOV     B,#010H
00E9 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 572
00EC 900000      R     MOV     DPTR,#output+01H
00EF E4                CLR     A
00F0 75F010            MOV     B,#010H
00F3 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 573
00F6 900000      R     MOV     DPTR,#i+01H
00F9 E0                MOVX    A,@DPTR
00FA 2410              ADD     A,#010H
00FC F0                MOVX    @DPTR,A
00FD 900000      R     MOV     DPTR,#i
0100 E0                MOVX    A,@DPTR
0101 3400              ADDC    A,#00H
0103 F0                MOVX    @DPTR,A
0104 020000      R     LJMP    ?C0075
0107         ?C0076:
                                           ; SOURCE LINE # 575
0107 900000      R     MOV     DPTR,#remainders
010A E0                MOVX    A,@DPTR
010B 604F              JZ      ?C0079
                                           ; SOURCE LINE # 576
                                           ; SOURCE LINE # 577
010D 900000      R     MOV     DPTR,#input
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 58  

0110 E0                MOVX    A,@DPTR
0111 F9                MOV     R1,A
0112 A3                INC     DPTR
0113 E0                MOVX    A,@DPTR
0114 FA                MOV     R2,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 900000      R     MOV     DPTR,#?_BlockCopy?BYTE+03H
011A C9                XCH     A,R1
011B F0                MOVX    @DPTR,A
011C A3                INC     DPTR
011D EA                MOV     A,R2
011E F0                MOVX    @DPTR,A
011F A3                INC     DPTR
0120 E9                MOV     A,R1
0121 F0                MOVX    @DPTR,A
0122 900000      R     MOV     DPTR,#output
0125 120000      R     LCALL   L?0093
                                           ; SOURCE LINE # 578
0128 900000      R     MOV     DPTR,#remainders
012B E0                MOVX    A,@DPTR
012C FF                MOV     R7,A
012D FD                MOV     R5,A
012E C3                CLR     C
012F 7410              MOV     A,#010H
0131 9D                SUBB    A,R5
0132 FD                MOV     R5,A
0133 E4                CLR     A
0134 9400              SUBB    A,#00H
0136 FC                MOV     R4,A
0137 C004              PUSH    AR4
0139 C005              PUSH    AR5
013B 900000      R     MOV     DPTR,#output
013E E0                MOVX    A,@DPTR
013F FB                MOV     R3,A
0140 A3                INC     DPTR
0141 E0                MOVX    A,@DPTR
0142 FA                MOV     R2,A
0143 A3                INC     DPTR
0144 E0                MOVX    A,@DPTR
0145 F9                MOV     R1,A
0146 EF                MOV     A,R7
0147 FD                MOV     R5,A
0148 7C00              MOV     R4,#00H
014A E9                MOV     A,R1
014B 2D                ADD     A,R5
014C F9                MOV     R1,A
014D EC                MOV     A,R4
014E 3A                ADDC    A,R2
014F FA                MOV     R2,A
0150 7D00              MOV     R5,#00H
0152 D007              POP     AR7
0154 D006              POP     AR6
0156 120000      E     LCALL   ?C?MEMSET
                                           ; SOURCE LINE # 579
                                           ; SOURCE LINE # 580
0159 120000      R     LCALL   L?0098
                                           ; SOURCE LINE # 581
                                           ; SOURCE LINE # 582
015C         ?C0079:
015C 22                RET     
             ; FUNCTION _AES128_CBC_decrypt_buffer (END)
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 59  


C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 60  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_AES128_ECB_decrypt. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  input. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  key. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  output . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0006H  3
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
_BlockCopy . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0020H  -----
  output . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  input. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_AES128_ECB_encrypt. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  input. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  key. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  output . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0006H  3
InvCipher. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0015H  -----
  round. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
Rcon . . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0200H  255
MixColumns . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  Tmp. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  Tm . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0002H  1
  t. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
_XorWithIv . . . . . . . . . . . . . .  STATIC   CODE   PROC     0008H  -----
  buf. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
state. . . . . . . . . . . . . . . . .  STATIC   XDATA  PTR      0000H  3
_xtime . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0021H  -----
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
Key. . . . . . . . . . . . . . . . . .  STATIC   XDATA  PTR      0003H  3
ShiftRows. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
rsbox. . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0100H  256
SubBytes . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
RoundKey . . . . . . . . . . . . . . .  STATIC   XDATA  ARRAY    0006H  176
_getSBoxInvert . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
sbox . . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  256
Iv . . . . . . . . . . . . . . . . . .  STATIC   XDATA  PTR      00B6H  3
_AddRoundKey . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  round. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0002H  1
_getSBoxValue. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0005H  -----
  num. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
InvMixColumns. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0000H  2
  a. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0002H  1
  b. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
  c. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0004H  1
  d. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0005H  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
Cipher . . . . . . . . . . . . . . . .  STATIC   CODE   PROC     0015H  -----
C51 COMPILER V9.01   AES                                                                   03/26/2019 16:44:03 PAGE 61  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  round. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
InvShiftRows . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_AES128_CBC_decrypt_buffer . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  output . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  input. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  length . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0006H  4
  key. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      000AH  3
  iv . . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      000DH  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0010H  2
  remainders . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0012H  1
InvSubBytes. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
KeyExpansion . . . . . . . . . . . . .  STATIC   CODE   PROC     0012H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
  k. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0008H  4
  tempa. . . . . . . . . . . . . . . .  AUTO     XDATA  ARRAY    000CH  4
_AES128_CBC_encrypt_buffer . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  output . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  input. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0003H  3
  length . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0006H  4
  key. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      000AH  3
  iv . . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      000DH  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0010H  2
  remainders . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0012H  1
state_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  ARRAY    -----  16
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3825    ----
   CONSTANT SIZE    =    767    ----
   XDATA SIZE       =    185     100
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
